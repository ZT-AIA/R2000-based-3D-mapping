; generated by Component: ARM Compiler 5.06 update 2 (build 183) Tool: ArmCC [4d35cd]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\discovery\rt_list.o --asm_dir=.\Discovery\ --list_dir=.\Discovery\ --depend=.\discovery\rt_list.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\inc -I..\src -I..\..\libraries\CMSIS\Include -I..\..\libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\libraries\STM32F4x7_ETH_Driver\inc -I..\..\libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\libraries\STM32F4-Discovery -I..\..\libraries\lwip-1.4.1\port\STM32F4x7 -I..\..\libraries\lwip-1.4.1\src\include -I..\..\libraries\lwip-1.4.1\src\include\ipv4 -I..\..\libraries\lwip-1.4.1\src\include\lwip -I..\..\libraries\lwip-1.4.1\src\include\netif -I..\..\libraries\lwip-1.4.1\port\STM32F4x7\arch -I..\..\libraries\rtx-v4.73\INC -I..\..\libraries\rtx-v4.73\SRC -I..\..\libraries\ptpd-2.0.0\src -I..\inc\system -I..\inc\laser -I..\inc\motorCtrl -I..\..\libraries\lwip-1.4.1\src\include\ipv4\lwip -Id:\Keil_v5\ARM\RV31\INC -Id:\Keil_v5\ARM\CMSIS\Include -Id:\Keil_v5\ARM\Inc\ST\STM32F4xx -D__MICROLIB -D__UVISION_VERSION=520 -DSTM32F40_41xxx -DUSE_STDPERIPH_DRIVER -D__CORTEX_M4F -D__FPU_PRESENT -D__CMSIS_RTOS -DSTM32F40_41xxx --omf_browse=.\discovery\rt_list.crf ..\..\libraries\rtx-v4.73\SRC\rt_List.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  rt_put_prio PROC
;;;59     
;;;60     void rt_put_prio (P_XCB p_CB, P_TCB p_task) {
000000  b530              PUSH     {r4,r5,lr}
000002  460a              MOV      r2,r1
;;;61       /* Put task identified with "p_task" into list ordered by priority.       */
;;;62       /* "p_CB" points to head of list; list has always an element at end with  */
;;;63       /* a priority less than "p_task->prio".                                   */
;;;64       P_TCB p_CB2;
;;;65       U32 prio;
;;;66       BOOL sem_mbx = __FALSE;
000004  2400              MOVS     r4,#0
;;;67     
;;;68       if (p_CB->cb_type == SCB || p_CB->cb_type == MCB || p_CB->cb_type == MUCB) {
000006  7805              LDRB     r5,[r0,#0]
000008  2d02              CMP      r5,#2
00000a  d005              BEQ      |L1.24|
00000c  7805              LDRB     r5,[r0,#0]
00000e  2d01              CMP      r5,#1
000010  d002              BEQ      |L1.24|
000012  7805              LDRB     r5,[r0,#0]
000014  2d03              CMP      r5,#3
000016  d100              BNE      |L1.26|
                  |L1.24|
;;;69         sem_mbx = __TRUE;
000018  2401              MOVS     r4,#1
                  |L1.26|
;;;70       }
;;;71       prio = p_task->prio;
00001a  7893              LDRB     r3,[r2,#2]
;;;72       p_CB2 = p_CB->p_lnk;
00001c  6841              LDR      r1,[r0,#4]
;;;73       /* Search for an entry in the list */
;;;74       while (p_CB2 != NULL && prio <= p_CB2->prio) {
00001e  e001              B        |L1.36|
                  |L1.32|
;;;75         p_CB = (P_XCB)p_CB2;
000020  4608              MOV      r0,r1
;;;76         p_CB2 = p_CB2->p_lnk;
000022  6849              LDR      r1,[r1,#4]
                  |L1.36|
000024  b111              CBZ      r1,|L1.44|
000026  788d              LDRB     r5,[r1,#2]            ;74
000028  429d              CMP      r5,r3                 ;74
00002a  d2f9              BCS      |L1.32|
                  |L1.44|
;;;77       }
;;;78       /* Entry found, insert the task into the list */
;;;79       p_task->p_lnk = p_CB2;
00002c  6051              STR      r1,[r2,#4]
;;;80       p_CB->p_lnk = p_task;
00002e  6042              STR      r2,[r0,#4]
;;;81       if (sem_mbx) {
000030  b11c              CBZ      r4,|L1.58|
;;;82         if (p_CB2 != NULL) {
000032  b101              CBZ      r1,|L1.54|
;;;83           p_CB2->p_rlnk = p_task;
000034  608a              STR      r2,[r1,#8]
                  |L1.54|
;;;84         }
;;;85         p_task->p_rlnk = (P_TCB)p_CB;
000036  6090              STR      r0,[r2,#8]
000038  e001              B        |L1.62|
                  |L1.58|
;;;86       }
;;;87       else {
;;;88         p_task->p_rlnk = NULL;
00003a  2500              MOVS     r5,#0
00003c  6095              STR      r5,[r2,#8]
                  |L1.62|
;;;89       }
;;;90     }
00003e  bd30              POP      {r4,r5,pc}
;;;91     
                          ENDP

                  rt_get_first PROC
;;;94     
;;;95     P_TCB rt_get_first (P_XCB p_CB) {
000040  4601              MOV      r1,r0
;;;96       /* Get task at head of list: it is the task with highest priority. */
;;;97       /* "p_CB" points to head of list. */
;;;98       P_TCB p_first;
;;;99     
;;;100      p_first = p_CB->p_lnk;
000042  6848              LDR      r0,[r1,#4]
;;;101      p_CB->p_lnk = p_first->p_lnk;
000044  6842              LDR      r2,[r0,#4]
000046  604a              STR      r2,[r1,#4]
;;;102      if (p_CB->cb_type == SCB || p_CB->cb_type == MCB || p_CB->cb_type == MUCB) {
000048  780a              LDRB     r2,[r1,#0]
00004a  2a02              CMP      r2,#2
00004c  d005              BEQ      |L1.90|
00004e  780a              LDRB     r2,[r1,#0]
000050  2a01              CMP      r2,#1
000052  d002              BEQ      |L1.90|
000054  780a              LDRB     r2,[r1,#0]
000056  2a03              CMP      r2,#3
000058  d108              BNE      |L1.108|
                  |L1.90|
;;;103        if (p_first->p_lnk != NULL) {
00005a  6842              LDR      r2,[r0,#4]
00005c  b11a              CBZ      r2,|L1.102|
;;;104          p_first->p_lnk->p_rlnk = (P_TCB)p_CB;
00005e  6842              LDR      r2,[r0,#4]
000060  6091              STR      r1,[r2,#8]
;;;105          p_first->p_lnk = NULL;
000062  2200              MOVS     r2,#0
000064  6042              STR      r2,[r0,#4]
                  |L1.102|
;;;106        }
;;;107        p_first->p_rlnk = NULL;
000066  2200              MOVS     r2,#0
000068  6082              STR      r2,[r0,#8]
00006a  e001              B        |L1.112|
                  |L1.108|
;;;108      }
;;;109      else {
;;;110        p_first->p_lnk = NULL;
00006c  2200              MOVS     r2,#0
00006e  6042              STR      r2,[r0,#4]
                  |L1.112|
;;;111      }
;;;112      return (p_first);
;;;113    }
000070  4770              BX       lr
;;;114    
                          ENDP

                  rt_put_rdy_first PROC
;;;117    
;;;118    void rt_put_rdy_first (P_TCB p_task) {
000072  4983              LDR      r1,|L1.640|
;;;119      /* Put task identified with "p_task" at the head of the ready list. The   */
;;;120      /* task must have at least a priority equal to highest priority in list.  */
;;;121      p_task->p_lnk = os_rdy.p_lnk;
000074  6849              LDR      r1,[r1,#4]  ; os_rdy
000076  6041              STR      r1,[r0,#4]
;;;122      p_task->p_rlnk = NULL;
000078  2100              MOVS     r1,#0
00007a  6081              STR      r1,[r0,#8]
;;;123      os_rdy.p_lnk = p_task;
00007c  4980              LDR      r1,|L1.640|
00007e  6048              STR      r0,[r1,#4]  ; os_rdy
;;;124    }
000080  4770              BX       lr
;;;125    
                          ENDP

                  rt_get_same_rdy_prio PROC
;;;128    
;;;129    P_TCB rt_get_same_rdy_prio (void) {
000082  487f              LDR      r0,|L1.640|
;;;130      /* Remove a task of same priority from ready list if any exists. Other-   */
;;;131      /* wise return NULL.                                                      */
;;;132      P_TCB p_first;
;;;133    
;;;134      p_first = os_rdy.p_lnk;
000084  6841              LDR      r1,[r0,#4]  ; os_rdy
;;;135      if (p_first->prio == os_tsk.run->prio) {
000086  7888              LDRB     r0,[r1,#2]
000088  4a7e              LDR      r2,|L1.644|
00008a  6812              LDR      r2,[r2,#0]  ; os_tsk
00008c  7892              LDRB     r2,[r2,#2]
00008e  4290              CMP      r0,r2
000090  d106              BNE      |L1.160|
;;;136        os_rdy.p_lnk = os_rdy.p_lnk->p_lnk;
000092  487b              LDR      r0,|L1.640|
000094  6840              LDR      r0,[r0,#4]  ; os_rdy
000096  6840              LDR      r0,[r0,#4]
000098  4a79              LDR      r2,|L1.640|
00009a  6050              STR      r0,[r2,#4]  ; os_rdy
;;;137        return (p_first);
00009c  4608              MOV      r0,r1
                  |L1.158|
;;;138      }
;;;139      return (NULL);
;;;140    }
00009e  4770              BX       lr
                  |L1.160|
0000a0  2000              MOVS     r0,#0                 ;139
0000a2  e7fc              B        |L1.158|
;;;141    
                          ENDP

                  rt_rmv_list PROC
;;;248    
;;;249    void rt_rmv_list (P_TCB p_task) {
0000a4  6882              LDR      r2,[r0,#8]
;;;250      /* Remove task identified with "p_task" from ready, semaphore or mailbox  */
;;;251      /* waiting list if enqueued.                                              */
;;;252      P_TCB p_b;
;;;253    
;;;254      if (p_task->p_rlnk != NULL) {
0000a6  b142              CBZ      r2,|L1.186|
;;;255        /* A task is enqueued in semaphore / mailbox waiting list. */
;;;256        p_task->p_rlnk->p_lnk = p_task->p_lnk;
0000a8  e9d02301          LDRD     r2,r3,[r0,#4]
0000ac  605a              STR      r2,[r3,#4]
;;;257        if (p_task->p_lnk != NULL) {
0000ae  6842              LDR      r2,[r0,#4]
0000b0  b112              CBZ      r2,|L1.184|
;;;258          p_task->p_lnk->p_rlnk = p_task->p_rlnk;
0000b2  e9d03201          LDRD     r3,r2,[r0,#4]
0000b6  609a              STR      r2,[r3,#8]
                  |L1.184|
;;;259        }
;;;260        return;
;;;261      }
;;;262    
;;;263      p_b = (P_TCB)&os_rdy;
;;;264      while (p_b != NULL) {
;;;265        /* Search the ready list for task "p_task" */
;;;266        if (p_b->p_lnk == p_task) {
;;;267          p_b->p_lnk = p_task->p_lnk;
;;;268          return;
;;;269        }
;;;270        p_b = p_b->p_lnk;
;;;271      }
;;;272    }
0000b8  4770              BX       lr
                  |L1.186|
0000ba  4971              LDR      r1,|L1.640|
0000bc  e006              B        |L1.204|
                  |L1.190|
0000be  684a              LDR      r2,[r1,#4]            ;266
0000c0  4282              CMP      r2,r0                 ;266
0000c2  d102              BNE      |L1.202|
0000c4  6842              LDR      r2,[r0,#4]            ;267
0000c6  604a              STR      r2,[r1,#4]            ;267
0000c8  e7f6              B        |L1.184|
                  |L1.202|
0000ca  6849              LDR      r1,[r1,#4]            ;270
                  |L1.204|
0000cc  2900              CMP      r1,#0                 ;264
0000ce  d1f6              BNE      |L1.190|
0000d0  bf00              NOP      
0000d2  e7f1              B        |L1.184|
;;;273    
                          ENDP

                  rt_resort_prio PROC
;;;144    
;;;145    void rt_resort_prio (P_TCB p_task) {
0000d4  b530              PUSH     {r4,r5,lr}
0000d6  4605              MOV      r5,r0
;;;146      /* Re-sort ordered lists after the priority of 'p_task' has changed.      */
;;;147      P_TCB p_CB;
;;;148    
;;;149      if (p_task->p_rlnk == NULL) {
0000d8  68a8              LDR      r0,[r5,#8]
0000da  b920              CBNZ     r0,|L1.230|
;;;150        if (p_task->state == READY) {
0000dc  7868              LDRB     r0,[r5,#1]
0000de  2801              CMP      r0,#1
0000e0  d10f              BNE      |L1.258|
;;;151          /* Task is chained into READY list. */
;;;152          p_CB = (P_TCB)&os_rdy;
0000e2  4c67              LDR      r4,|L1.640|
;;;153          goto res;
0000e4  e006              B        |L1.244|
                  |L1.230|
;;;154        }
;;;155      }
;;;156      else {
;;;157        p_CB = p_task->p_rlnk;
0000e6  68ac              LDR      r4,[r5,#8]
;;;158        while (p_CB->cb_type == TCB) {
0000e8  e000              B        |L1.236|
                  |L1.234|
;;;159          /* Find a header of this task chain list. */
;;;160          p_CB = p_CB->p_rlnk;
0000ea  68a4              LDR      r4,[r4,#8]
                  |L1.236|
0000ec  7820              LDRB     r0,[r4,#0]            ;158
0000ee  2800              CMP      r0,#0                 ;158
0000f0  d0fb              BEQ      |L1.234|
;;;161        }
;;;162    res:rt_rmv_list (p_task);
0000f2  bf00              NOP      
                  |L1.244|
0000f4  4628              MOV      r0,r5
0000f6  f7fffffe          BL       rt_rmv_list
;;;163        rt_put_prio ((P_XCB)p_CB, p_task);
0000fa  4629              MOV      r1,r5
0000fc  4620              MOV      r0,r4
0000fe  f7fffffe          BL       rt_put_prio
                  |L1.258|
;;;164      }
;;;165    }
000102  bd30              POP      {r4,r5,pc}
;;;166    
                          ENDP

                  rt_put_dly PROC
;;;169    
;;;170    void rt_put_dly (P_TCB p_task, U16 delay) {
000104  b570              PUSH     {r4-r6,lr}
000106  460c              MOV      r4,r1
;;;171      /* Put a task identified with "p_task" into chained delay wait list using */
;;;172      /* a delay value of "delay".                                              */
;;;173      P_TCB p;
;;;174      U32 delta,idelay = delay;
000108  4623              MOV      r3,r4
;;;175    
;;;176      p = (P_TCB)&os_dly;
00010a  495f              LDR      r1,|L1.648|
;;;177      if (p->p_dlnk == NULL) {
00010c  68cd              LDR      r5,[r1,#0xc]
00010e  b90d              CBNZ     r5,|L1.276|
;;;178        /* Delay list empty */
;;;179        delta = 0;
000110  2200              MOVS     r2,#0
;;;180        goto last;
000112  e005              B        |L1.288|
                  |L1.276|
;;;181      }
;;;182      delta = os_dly.delta_time;
000114  4d5c              LDR      r5,|L1.648|
000116  8aaa              LDRH     r2,[r5,#0x14]  ; os_dly
;;;183      while (delta < idelay) {
000118  e00e              B        |L1.312|
                  |L1.282|
;;;184        if (p->p_dlnk == NULL) {
00011a  68cd              LDR      r5,[r1,#0xc]
00011c  b94d              CBNZ     r5,|L1.306|
;;;185          /* End of list found */
;;;186    last: p_task->p_dlnk = NULL;
00011e  bf00              NOP      
                  |L1.288|
000120  2500              MOVS     r5,#0
000122  60c5              STR      r5,[r0,#0xc]
;;;187          p->p_dlnk = p_task;
000124  60c8              STR      r0,[r1,#0xc]
;;;188          p_task->p_blnk = p;
000126  6101              STR      r1,[r0,#0x10]
;;;189          p->delta_time = (U16)(idelay - delta);
000128  1a9d              SUBS     r5,r3,r2
00012a  828d              STRH     r5,[r1,#0x14]
;;;190          p_task->delta_time = 0;
00012c  2500              MOVS     r5,#0
00012e  8285              STRH     r5,[r0,#0x14]
                  |L1.304|
;;;191          return;
;;;192        }
;;;193        p = p->p_dlnk;
;;;194        delta += p->delta_time;
;;;195      }
;;;196      /* Right place found */
;;;197      p_task->p_dlnk = p->p_dlnk;
;;;198      p->p_dlnk = p_task;
;;;199      p_task->p_blnk = p;
;;;200      if (p_task->p_dlnk != NULL) {
;;;201        p_task->p_dlnk->p_blnk = p_task;
;;;202      }
;;;203      p_task->delta_time = (U16)(delta - idelay);
;;;204      p->delta_time -= p_task->delta_time;
;;;205    }
000130  bd70              POP      {r4-r6,pc}
                  |L1.306|
000132  68c9              LDR      r1,[r1,#0xc]          ;193
000134  8a8d              LDRH     r5,[r1,#0x14]         ;194
000136  442a              ADD      r2,r2,r5              ;194
                  |L1.312|
000138  429a              CMP      r2,r3                 ;183
00013a  d3ee              BCC      |L1.282|
00013c  68cd              LDR      r5,[r1,#0xc]          ;197
00013e  60c5              STR      r5,[r0,#0xc]          ;197
000140  60c8              STR      r0,[r1,#0xc]          ;198
000142  6101              STR      r1,[r0,#0x10]         ;199
000144  68c5              LDR      r5,[r0,#0xc]          ;200
000146  b10d              CBZ      r5,|L1.332|
000148  68c5              LDR      r5,[r0,#0xc]          ;201
00014a  6128              STR      r0,[r5,#0x10]         ;201
                  |L1.332|
00014c  1ad5              SUBS     r5,r2,r3              ;203
00014e  8285              STRH     r5,[r0,#0x14]         ;203
000150  8a8d              LDRH     r5,[r1,#0x14]         ;204
000152  8a86              LDRH     r6,[r0,#0x14]         ;204
000154  1bad              SUBS     r5,r5,r6              ;204
000156  828d              STRH     r5,[r1,#0x14]         ;204
000158  bf00              NOP      
00015a  e7e9              B        |L1.304|
;;;206    
                          ENDP

                  rt_dec_dly PROC
;;;209    
;;;210    void rt_dec_dly (void) {
00015c  b510              PUSH     {r4,lr}
;;;211      /* Decrement delta time of list head: remove tasks having a value of zero.*/
;;;212      P_TCB p_rdy;
;;;213    
;;;214      if (os_dly.p_dlnk == NULL) {
00015e  484a              LDR      r0,|L1.648|
000160  68c0              LDR      r0,[r0,#0xc]  ; os_dly
000162  b900              CBNZ     r0,|L1.358|
                  |L1.356|
;;;215        return;
;;;216      }
;;;217      os_dly.delta_time--;
;;;218      while ((os_dly.delta_time == 0) && (os_dly.p_dlnk != NULL)) {
;;;219        p_rdy = os_dly.p_dlnk;
;;;220        if (p_rdy->p_rlnk != NULL) {
;;;221          /* Task is really enqueued, remove task from semaphore/mailbox */
;;;222          /* timeout waiting list. */
;;;223          p_rdy->p_rlnk->p_lnk = p_rdy->p_lnk;
;;;224          if (p_rdy->p_lnk != NULL) {
;;;225            p_rdy->p_lnk->p_rlnk = p_rdy->p_rlnk;
;;;226            p_rdy->p_lnk = NULL;
;;;227          }
;;;228          p_rdy->p_rlnk = NULL;
;;;229        }
;;;230        rt_put_prio (&os_rdy, p_rdy);
;;;231        os_dly.delta_time = p_rdy->delta_time;
;;;232        if (p_rdy->state == WAIT_ITV) {
;;;233          /* Calculate the next time for interval wait. */
;;;234          p_rdy->delta_time = p_rdy->interval_time + (U16)os_time;
;;;235        }
;;;236        p_rdy->state   = READY;
;;;237        os_dly.p_dlnk = p_rdy->p_dlnk;
;;;238        if (p_rdy->p_dlnk != NULL) {
;;;239          p_rdy->p_dlnk->p_blnk =  (P_TCB)&os_dly;
;;;240          p_rdy->p_dlnk = NULL;
;;;241        }
;;;242        p_rdy->p_blnk = NULL;
;;;243      }
;;;244    }
000164  bd10              POP      {r4,pc}
                  |L1.358|
000166  4848              LDR      r0,|L1.648|
000168  8a80              LDRH     r0,[r0,#0x14]         ;217  ; os_dly
00016a  1e40              SUBS     r0,r0,#1              ;217
00016c  4946              LDR      r1,|L1.648|
00016e  8288              STRH     r0,[r1,#0x14]         ;217
000170  e02c              B        |L1.460|
                  |L1.370|
000172  4845              LDR      r0,|L1.648|
000174  68c4              LDR      r4,[r0,#0xc]          ;219  ; os_dly
000176  68a0              LDR      r0,[r4,#8]            ;220
000178  b158              CBZ      r0,|L1.402|
00017a  e9d40101          LDRD     r0,r1,[r4,#4]         ;223
00017e  6048              STR      r0,[r1,#4]            ;223
000180  6860              LDR      r0,[r4,#4]            ;224
000182  b120              CBZ      r0,|L1.398|
000184  e9d41001          LDRD     r1,r0,[r4,#4]         ;225
000188  6088              STR      r0,[r1,#8]            ;225
00018a  2000              MOVS     r0,#0                 ;226
00018c  6060              STR      r0,[r4,#4]            ;226
                  |L1.398|
00018e  2000              MOVS     r0,#0                 ;228
000190  60a0              STR      r0,[r4,#8]            ;228
                  |L1.402|
000192  4621              MOV      r1,r4                 ;230
000194  483a              LDR      r0,|L1.640|
000196  f7fffffe          BL       rt_put_prio
00019a  8aa0              LDRH     r0,[r4,#0x14]         ;231
00019c  493a              LDR      r1,|L1.648|
00019e  8288              STRH     r0,[r1,#0x14]         ;231
0001a0  7860              LDRB     r0,[r4,#1]            ;232
0001a2  2804              CMP      r0,#4                 ;232
0001a4  d104              BNE      |L1.432|
0001a6  8ae0              LDRH     r0,[r4,#0x16]         ;234
0001a8  4938              LDR      r1,|L1.652|
0001aa  8809              LDRH     r1,[r1,#0]            ;234  ; os_time
0001ac  4408              ADD      r0,r0,r1              ;234
0001ae  82a0              STRH     r0,[r4,#0x14]         ;234
                  |L1.432|
0001b0  2001              MOVS     r0,#1                 ;236
0001b2  7060              STRB     r0,[r4,#1]            ;236
0001b4  4934              LDR      r1,|L1.648|
0001b6  68e0              LDR      r0,[r4,#0xc]          ;237
0001b8  60c8              STR      r0,[r1,#0xc]          ;237  ; os_dly
0001ba  68e0              LDR      r0,[r4,#0xc]          ;238
0001bc  b120              CBZ      r0,|L1.456|
0001be  4608              MOV      r0,r1                 ;239
0001c0  68e1              LDR      r1,[r4,#0xc]          ;239
0001c2  6108              STR      r0,[r1,#0x10]         ;239
0001c4  2000              MOVS     r0,#0                 ;240
0001c6  60e0              STR      r0,[r4,#0xc]          ;240
                  |L1.456|
0001c8  2000              MOVS     r0,#0                 ;242
0001ca  6120              STR      r0,[r4,#0x10]         ;242
                  |L1.460|
0001cc  482e              LDR      r0,|L1.648|
0001ce  8a80              LDRH     r0,[r0,#0x14]         ;218  ; os_dly
0001d0  b918              CBNZ     r0,|L1.474|
0001d2  482d              LDR      r0,|L1.648|
0001d4  68c0              LDR      r0,[r0,#0xc]          ;218  ; os_dly
0001d6  2800              CMP      r0,#0                 ;218
0001d8  d1cb              BNE      |L1.370|
                  |L1.474|
0001da  bf00              NOP      
0001dc  e7c2              B        |L1.356|
;;;245    
                          ENDP

                  rt_rmv_dly PROC
;;;276    
;;;277    void rt_rmv_dly (P_TCB p_task) {
0001de  6901              LDR      r1,[r0,#0x10]
;;;278      /* Remove task identified with "p_task" from delay list if enqueued.      */
;;;279      P_TCB p_b;
;;;280    
;;;281      p_b = p_task->p_blnk;
;;;282      if (p_b != NULL) {
0001e0  b181              CBZ      r1,|L1.516|
;;;283        /* Task is really enqueued */
;;;284        p_b->p_dlnk = p_task->p_dlnk;
0001e2  68c2              LDR      r2,[r0,#0xc]
0001e4  60ca              STR      r2,[r1,#0xc]
;;;285        if (p_task->p_dlnk != NULL) {
0001e6  68c2              LDR      r2,[r0,#0xc]
0001e8  b142              CBZ      r2,|L1.508|
;;;286          /* 'p_task' is in the middle of list */
;;;287          p_b->delta_time += p_task->delta_time;
0001ea  8a8a              LDRH     r2,[r1,#0x14]
0001ec  8a83              LDRH     r3,[r0,#0x14]
0001ee  441a              ADD      r2,r2,r3
0001f0  828a              STRH     r2,[r1,#0x14]
;;;288          p_task->p_dlnk->p_blnk = p_b;
0001f2  68c2              LDR      r2,[r0,#0xc]
0001f4  6111              STR      r1,[r2,#0x10]
;;;289          p_task->p_dlnk = NULL;
0001f6  2200              MOVS     r2,#0
0001f8  60c2              STR      r2,[r0,#0xc]
0001fa  e001              B        |L1.512|
                  |L1.508|
;;;290        }
;;;291        else {
;;;292          /* 'p_task' is at the end of list */
;;;293          p_b->delta_time = 0;
0001fc  2200              MOVS     r2,#0
0001fe  828a              STRH     r2,[r1,#0x14]
                  |L1.512|
;;;294        }
;;;295        p_task->p_blnk = NULL;
000200  2200              MOVS     r2,#0
000202  6102              STR      r2,[r0,#0x10]
                  |L1.516|
;;;296      }
;;;297    }
000204  4770              BX       lr
;;;298    
                          ENDP

                  rt_psq_enq PROC
;;;301    
;;;302    void rt_psq_enq (OS_ID entry, U32 arg) {
000206  e92d41f0          PUSH     {r4-r8,lr}
00020a  4605              MOV      r5,r0
00020c  460e              MOV      r6,r1
;;;303      /* Insert post service request "entry" into ps-queue. */
;;;304      U32 idx;
;;;305    
;;;306      idx = rt_inc_qi (os_psq->size, &os_psq->count, &os_psq->first);
00020e  4820              LDR      r0,|L1.656|
000210  78c1              LDRB     r1,[r0,#3]  ; os_fifo
000212  1c82              ADDS     r2,r0,#2
000214  4603              MOV      r3,r0
000216  bf00              NOP      
000218  bf00              NOP      
                  |L1.538|
00021a  e8d20f4f          LDREXB   r0,[r2]
00021e  4288              CMP      r0,r1
000220  d102              BNE      |L1.552|
000222  f3bf8f2f          CLREX    
000226  e018              B        |L1.602|
                  |L1.552|
000228  f1000c01          ADD      r12,r0,#1
00022c  f00c08ff          AND      r8,r12,#0xff
000230  e8c28f4c          STREXB   r12,r8,[r2]
000234  f1bc0f00          CMP      r12,#0
000238  d1ef              BNE      |L1.538|
00023a  bf00              NOP      
                  |L1.572|
00023c  e8d3cf4f          LDREXB   r12,[r3]
000240  4660              MOV      r0,r12
000242  1c47              ADDS     r7,r0,#1
000244  428f              CMP      r7,r1
000246  d100              BNE      |L1.586|
000248  2700              MOVS     r7,#0
                  |L1.586|
00024a  f00708ff          AND      r8,r7,#0xff
00024e  e8c38f4c          STREXB   r12,r8,[r3]
000252  f1bc0f00          CMP      r12,#0
000256  d1f1              BNE      |L1.572|
000258  bf00              NOP      
                  |L1.602|
00025a  4604              MOV      r4,r0
;;;307      if (idx < os_psq->size) {
00025c  480c              LDR      r0,|L1.656|
00025e  78c0              LDRB     r0,[r0,#3]  ; os_fifo
000260  42a0              CMP      r0,r4
000262  d907              BLS      |L1.628|
;;;308        os_psq->q[idx].id  = entry;
000264  480a              LDR      r0,|L1.656|
000266  1d00              ADDS     r0,r0,#4
000268  f8405034          STR      r5,[r0,r4,LSL #3]
;;;309        os_psq->q[idx].arg = arg;
00026c  eb0000c4          ADD      r0,r0,r4,LSL #3
000270  6046              STR      r6,[r0,#4]
000272  e002              B        |L1.634|
                  |L1.628|
;;;310      }
;;;311      else {
;;;312        os_error (OS_ERR_FIFO_OVF);
000274  2002              MOVS     r0,#2
000276  f7fffffe          BL       os_error
                  |L1.634|
;;;313      }
;;;314    }
00027a  e8bd81f0          POP      {r4-r8,pc}
;;;315    
                          ENDP

00027e  0000              DCW      0x0000
                  |L1.640|
                          DCD      os_rdy
                  |L1.644|
                          DCD      os_tsk
                  |L1.648|
                          DCD      os_dly
                  |L1.652|
                          DCD      os_time
                  |L1.656|
                          DCD      os_fifo

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  os_rdy
                          %        24
                  os_dly
                          %        24
