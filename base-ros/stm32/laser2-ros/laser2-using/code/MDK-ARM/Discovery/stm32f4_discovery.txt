; generated by Component: ARM Compiler 5.06 update 2 (build 183) Tool: ArmCC [4d35cd]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\discovery\stm32f4_discovery.o --asm_dir=.\Discovery\ --list_dir=.\Discovery\ --depend=.\discovery\stm32f4_discovery.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\inc -I..\src -I..\..\libraries\CMSIS\Include -I..\..\libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\libraries\STM32F4x7_ETH_Driver\inc -I..\..\libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\libraries\STM32F4-Discovery -I..\..\libraries\lwip-1.4.1\port\STM32F4x7 -I..\..\libraries\lwip-1.4.1\src\include -I..\..\libraries\lwip-1.4.1\src\include\ipv4 -I..\..\libraries\lwip-1.4.1\src\include\lwip -I..\..\libraries\lwip-1.4.1\src\include\netif -I..\..\libraries\lwip-1.4.1\port\STM32F4x7\arch -I..\..\libraries\rtx-v4.73\INC -I..\..\libraries\rtx-v4.73\SRC -I..\..\libraries\ptpd-2.0.0\src -I..\inc\system -I..\inc\laser -I..\inc\motorCtrl -I..\..\libraries\lwip-1.4.1\src\include\ipv4\lwip -Id:\Keil_v5\ARM\RV31\INC -Id:\Keil_v5\ARM\CMSIS\Include -Id:\Keil_v5\ARM\Inc\ST\STM32F4xx -D__MICROLIB -D__UVISION_VERSION=520 -DSTM32F40_41xxx -DUSE_STDPERIPH_DRIVER -D__CORTEX_M4F -D__FPU_PRESENT -D__CMSIS_RTOS -DSTM32F40_41xxx --omf_browse=.\discovery\stm32f4_discovery.crf ..\..\libraries\STM32F4-Discovery\stm32f4_discovery.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  STM_EVAL_LEDInit PROC
;;;161      */
;;;162    void STM_EVAL_LEDInit(Led_TypeDef Led)
000000  b51c              PUSH     {r2-r4,lr}
;;;163    {
000002  4604              MOV      r4,r0
;;;164      GPIO_InitTypeDef  GPIO_InitStructure;
;;;165      
;;;166      /* Enable the GPIO_LED Clock */
;;;167      RCC_AHB1PeriphClockCmd(GPIO_CLK[Led], ENABLE);
000004  49fe              LDR      r1,|L1.1024|
000006  f8510024          LDR      r0,[r1,r4,LSL #2]
00000a  2101              MOVS     r1,#1
00000c  f7fffffe          BL       RCC_AHB1PeriphClockCmd
;;;168    
;;;169      /* Configure the GPIO_LED pin */
;;;170      GPIO_InitStructure.GPIO_Pin = GPIO_PIN[Led];
000010  48fc              LDR      r0,|L1.1028|
000012  f8300014          LDRH     r0,[r0,r4,LSL #1]
000016  9000              STR      r0,[sp,#0]
;;;171      GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
000018  2001              MOVS     r0,#1
00001a  f88d0004          STRB     r0,[sp,#4]
;;;172      GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
00001e  2000              MOVS     r0,#0
000020  f88d0006          STRB     r0,[sp,#6]
;;;173      GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
000024  2001              MOVS     r0,#1
000026  f88d0007          STRB     r0,[sp,#7]
;;;174      GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
00002a  2002              MOVS     r0,#2
00002c  f88d0005          STRB     r0,[sp,#5]
;;;175      GPIO_Init(GPIO_PORT[Led], &GPIO_InitStructure);
000030  49f5              LDR      r1,|L1.1032|
000032  f8510024          LDR      r0,[r1,r4,LSL #2]
000036  4669              MOV      r1,sp
000038  f7fffffe          BL       GPIO_Init
;;;176    }
00003c  bd1c              POP      {r2-r4,pc}
;;;177    
                          ENDP

                  STM_EVAL_LEDOn PROC
;;;187      */
;;;188    void STM_EVAL_LEDOn(Led_TypeDef Led)
00003e  49f1              LDR      r1,|L1.1028|
;;;189    {
;;;190      GPIO_PORT[Led]->BSRRL = GPIO_PIN[Led];
000040  f8311010          LDRH     r1,[r1,r0,LSL #1]
000044  4af0              LDR      r2,|L1.1032|
000046  f8522020          LDR      r2,[r2,r0,LSL #2]
00004a  8311              STRH     r1,[r2,#0x18]
;;;191    }
00004c  4770              BX       lr
;;;192    
                          ENDP

                  STM_EVAL_LEDOff PROC
;;;202      */
;;;203    void STM_EVAL_LEDOff(Led_TypeDef Led)
00004e  49ed              LDR      r1,|L1.1028|
;;;204    {
;;;205      GPIO_PORT[Led]->BSRRH = GPIO_PIN[Led];  
000050  f8311010          LDRH     r1,[r1,r0,LSL #1]
000054  4aec              LDR      r2,|L1.1032|
000056  f8522020          LDR      r2,[r2,r0,LSL #2]
00005a  8351              STRH     r1,[r2,#0x1a]
;;;206    }
00005c  4770              BX       lr
;;;207    
                          ENDP

                  STM_EVAL_LEDToggle PROC
;;;217      */
;;;218    void STM_EVAL_LEDToggle(Led_TypeDef Led)
00005e  49ea              LDR      r1,|L1.1032|
;;;219    {
;;;220      GPIO_PORT[Led]->ODR ^= GPIO_PIN[Led];
000060  f8511020          LDR      r1,[r1,r0,LSL #2]
000064  6949              LDR      r1,[r1,#0x14]
000066  4ae7              LDR      r2,|L1.1028|
000068  f8322010          LDRH     r2,[r2,r0,LSL #1]
00006c  4051              EORS     r1,r1,r2
00006e  4ae6              LDR      r2,|L1.1032|
000070  f8522020          LDR      r2,[r2,r0,LSL #2]
000074  6151              STR      r1,[r2,#0x14]
;;;221    }
000076  4770              BX       lr
;;;222    
                          ENDP

                  STM_EVAL_PBInit PROC
;;;233      */
;;;234    void STM_EVAL_PBInit(Button_TypeDef Button, ButtonMode_TypeDef Button_Mode)
000078  b530              PUSH     {r4,r5,lr}
;;;235    {
00007a  b085              SUB      sp,sp,#0x14
00007c  4604              MOV      r4,r0
00007e  460d              MOV      r5,r1
;;;236      GPIO_InitTypeDef GPIO_InitStructure;
;;;237      EXTI_InitTypeDef EXTI_InitStructure;
;;;238      NVIC_InitTypeDef NVIC_InitStructure;
;;;239    
;;;240      /* Enable the BUTTON Clock */
;;;241      RCC_AHB1PeriphClockCmd(BUTTON_CLK[Button], ENABLE);
000080  49e2              LDR      r1,|L1.1036|
000082  f8510024          LDR      r0,[r1,r4,LSL #2]
000086  2101              MOVS     r1,#1
000088  f7fffffe          BL       RCC_AHB1PeriphClockCmd
;;;242      RCC_APB2PeriphClockCmd(RCC_APB2Periph_SYSCFG, ENABLE);
00008c  2101              MOVS     r1,#1
00008e  0388              LSLS     r0,r1,#14
000090  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;243    
;;;244      /* Configure Button pin as input */
;;;245      GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
000094  2000              MOVS     r0,#0
000096  f88d0010          STRB     r0,[sp,#0x10]
;;;246      GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
00009a  f88d0013          STRB     r0,[sp,#0x13]
;;;247      GPIO_InitStructure.GPIO_Pin = BUTTON_PIN[Button];
00009e  48dc              LDR      r0,|L1.1040|
0000a0  f8300014          LDRH     r0,[r0,r4,LSL #1]
0000a4  9003              STR      r0,[sp,#0xc]
;;;248      GPIO_Init(BUTTON_PORT[Button], &GPIO_InitStructure);
0000a6  49db              LDR      r1,|L1.1044|
0000a8  f8510024          LDR      r0,[r1,r4,LSL #2]
0000ac  a903              ADD      r1,sp,#0xc
0000ae  f7fffffe          BL       GPIO_Init
;;;249    
;;;250      if (Button_Mode == BUTTON_MODE_EXTI)
0000b2  2d01              CMP      r5,#1
0000b4  d124              BNE      |L1.256|
;;;251      {
;;;252        /* Connect Button EXTI Line to Button GPIO Pin */
;;;253        SYSCFG_EXTILineConfig(BUTTON_PORT_SOURCE[Button], BUTTON_PIN_SOURCE[Button]);
0000b6  4ad8              LDR      r2,|L1.1048|
0000b8  5d11              LDRB     r1,[r2,r4]
0000ba  4ad8              LDR      r2,|L1.1052|
0000bc  5d10              LDRB     r0,[r2,r4]
0000be  f7fffffe          BL       SYSCFG_EXTILineConfig
;;;254    
;;;255        /* Configure Button EXTI line */
;;;256        EXTI_InitStructure.EXTI_Line = BUTTON_EXTI_LINE[Button];
0000c2  48d7              LDR      r0,|L1.1056|
0000c4  f8300014          LDRH     r0,[r0,r4,LSL #1]
0000c8  9001              STR      r0,[sp,#4]
;;;257        EXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;
0000ca  2000              MOVS     r0,#0
0000cc  f88d0008          STRB     r0,[sp,#8]
;;;258        EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Rising;  
0000d0  2008              MOVS     r0,#8
0000d2  f88d0009          STRB     r0,[sp,#9]
;;;259        EXTI_InitStructure.EXTI_LineCmd = ENABLE;
0000d6  2001              MOVS     r0,#1
0000d8  f88d000a          STRB     r0,[sp,#0xa]
;;;260        EXTI_Init(&EXTI_InitStructure);
0000dc  a801              ADD      r0,sp,#4
0000de  f7fffffe          BL       EXTI_Init
;;;261    
;;;262        /* Enable and set Button EXTI Interrupt to the lowest priority */
;;;263        NVIC_InitStructure.NVIC_IRQChannel = BUTTON_IRQn[Button];
0000e2  48d0              LDR      r0,|L1.1060|
0000e4  5d00              LDRB     r0,[r0,r4]
0000e6  f88d0000          STRB     r0,[sp,#0]
;;;264        NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0x0F;
0000ea  200f              MOVS     r0,#0xf
0000ec  f88d0001          STRB     r0,[sp,#1]
;;;265        NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0x0F;
0000f0  f88d0002          STRB     r0,[sp,#2]
;;;266        NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
0000f4  2001              MOVS     r0,#1
0000f6  f88d0003          STRB     r0,[sp,#3]
;;;267    
;;;268        NVIC_Init(&NVIC_InitStructure); 
0000fa  4668              MOV      r0,sp
0000fc  f7fffffe          BL       NVIC_Init
                  |L1.256|
;;;269      }
;;;270    }
000100  b005              ADD      sp,sp,#0x14
000102  bd30              POP      {r4,r5,pc}
;;;271    
                          ENDP

                  STM_EVAL_PBGetState PROC
;;;277      */
;;;278    uint32_t STM_EVAL_PBGetState(Button_TypeDef Button)
000104  b510              PUSH     {r4,lr}
;;;279    {
000106  4604              MOV      r4,r0
;;;280      return GPIO_ReadInputDataBit(BUTTON_PORT[Button], BUTTON_PIN[Button]);
000108  4ac1              LDR      r2,|L1.1040|
00010a  f8321014          LDRH     r1,[r2,r4,LSL #1]
00010e  4ac1              LDR      r2,|L1.1044|
000110  f8520024          LDR      r0,[r2,r4,LSL #2]
000114  f7fffffe          BL       GPIO_ReadInputDataBit
;;;281    }
000118  bd10              POP      {r4,pc}
;;;282    
                          ENDP

                  STM_EVAL_COMInit PROC
;;;295      */
;;;296    void STM_EVAL_COMInit(COM_TypeDef COM, USART_InitTypeDef* USART_InitStruct)
00011a  b57c              PUSH     {r2-r6,lr}
;;;297    {
00011c  4604              MOV      r4,r0
00011e  460d              MOV      r5,r1
;;;298      GPIO_InitTypeDef GPIO_InitStructure;
;;;299    
;;;300      /* Enable GPIO clock */
;;;301      RCC_AHB1PeriphClockCmd(COM_TX_PORT_CLK[COM] | COM_RX_PORT_CLK[COM], ENABLE);
000120  49c1              LDR      r1,|L1.1064|
000122  f8511024          LDR      r1,[r1,r4,LSL #2]
000126  4ac1              LDR      r2,|L1.1068|
000128  f8522024          LDR      r2,[r2,r4,LSL #2]
00012c  ea410002          ORR      r0,r1,r2
000130  2101              MOVS     r1,#1
000132  f7fffffe          BL       RCC_AHB1PeriphClockCmd
;;;302    
;;;303       /* Enable UART clock */
;;;304      //RCC_APB2PeriphClockCmd(COM_USART_CLK[COM], ENABLE);
;;;305      
;;;306        /* Enable UART clock */
;;;307      RCC_APB1PeriphClockCmd(COM_USART_CLK[COM], ENABLE);	 
000136  49be              LDR      r1,|L1.1072|
000138  f8510024          LDR      r0,[r1,r4,LSL #2]
00013c  2101              MOVS     r1,#1
00013e  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;308    
;;;309      /* Connect PXx to USARTx_Tx*/
;;;310      GPIO_PinAFConfig(COM_TX_PORT[COM], COM_TX_PIN_SOURCE[COM], COM_TX_AF[COM]);
000142  4bbc              LDR      r3,|L1.1076|
000144  f8132014          LDRB     r2,[r3,r4,LSL #1]
000148  4bbb              LDR      r3,|L1.1080|
00014a  f8331014          LDRH     r1,[r3,r4,LSL #1]
00014e  4bbb              LDR      r3,|L1.1084|
000150  f8530024          LDR      r0,[r3,r4,LSL #2]
000154  f7fffffe          BL       GPIO_PinAFConfig
;;;311    
;;;312      /* Connect PXx to USARTx_Rx*/
;;;313      GPIO_PinAFConfig(COM_RX_PORT[COM], COM_RX_PIN_SOURCE[COM], COM_RX_AF[COM]);
000158  4bb9              LDR      r3,|L1.1088|
00015a  f8132014          LDRB     r2,[r3,r4,LSL #1]
00015e  4bb9              LDR      r3,|L1.1092|
000160  f8331014          LDRH     r1,[r3,r4,LSL #1]
000164  4bb8              LDR      r3,|L1.1096|
000166  f8530024          LDR      r0,[r3,r4,LSL #2]
00016a  f7fffffe          BL       GPIO_PinAFConfig
;;;314    
;;;315      /* Configure USART Tx as alternate function  */
;;;316      GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
00016e  2000              MOVS     r0,#0
000170  f88d0006          STRB     r0,[sp,#6]
;;;317      GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
000174  2001              MOVS     r0,#1
000176  f88d0007          STRB     r0,[sp,#7]
;;;318      GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
00017a  2002              MOVS     r0,#2
00017c  f88d0004          STRB     r0,[sp,#4]
;;;319    
;;;320      GPIO_InitStructure.GPIO_Pin = COM_TX_PIN[COM];
000180  48b2              LDR      r0,|L1.1100|
000182  f8300014          LDRH     r0,[r0,r4,LSL #1]
000186  9000              STR      r0,[sp,#0]
;;;321      GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
000188  2002              MOVS     r0,#2
00018a  f88d0005          STRB     r0,[sp,#5]
;;;322      GPIO_Init(COM_TX_PORT[COM], &GPIO_InitStructure);
00018e  49ab              LDR      r1,|L1.1084|
000190  f8510024          LDR      r0,[r1,r4,LSL #2]
000194  4669              MOV      r1,sp
000196  f7fffffe          BL       GPIO_Init
;;;323    
;;;324      /* Configure USART Rx as alternate function  */
;;;325      GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
00019a  2002              MOVS     r0,#2
00019c  f88d0004          STRB     r0,[sp,#4]
;;;326      GPIO_InitStructure.GPIO_Pin = COM_RX_PIN[COM];
0001a0  48ab              LDR      r0,|L1.1104|
0001a2  f8300014          LDRH     r0,[r0,r4,LSL #1]
0001a6  9000              STR      r0,[sp,#0]
;;;327      GPIO_Init(COM_RX_PORT[COM], &GPIO_InitStructure);
0001a8  49a7              LDR      r1,|L1.1096|
0001aa  f8510024          LDR      r0,[r1,r4,LSL #2]
0001ae  4669              MOV      r1,sp
0001b0  f7fffffe          BL       GPIO_Init
;;;328    
;;;329      /* USART configuration */
;;;330      USART_Init(COM_USART[COM], USART_InitStruct);
0001b4  49a7              LDR      r1,|L1.1108|
0001b6  f8510024          LDR      r0,[r1,r4,LSL #2]
0001ba  4629              MOV      r1,r5
0001bc  f7fffffe          BL       USART_Init
;;;331        
;;;332      /* Enable USART */
;;;333      USART_Cmd(COM_USART[COM], ENABLE);
0001c0  49a4              LDR      r1,|L1.1108|
0001c2  f8510024          LDR      r0,[r1,r4,LSL #2]
0001c6  2101              MOVS     r1,#1
0001c8  f7fffffe          BL       USART_Cmd
;;;334    }
0001cc  bd7c              POP      {r2-r6,pc}
;;;335    
                          ENDP

                  SD_LowLevel_DeInit PROC
;;;343      */
;;;344    void SD_LowLevel_DeInit(void)
0001ce  b51c              PUSH     {r2-r4,lr}
;;;345    {
;;;346      GPIO_InitTypeDef  GPIO_InitStructure;
;;;347      
;;;348      /*!< Disable SDIO Clock */
;;;349      SDIO_ClockCmd(DISABLE);
0001d0  2000              MOVS     r0,#0
0001d2  f7fffffe          BL       SDIO_ClockCmd
;;;350      
;;;351      /*!< Set Power State to OFF */
;;;352      SDIO_SetPowerState(SDIO_PowerState_OFF);
0001d6  2000              MOVS     r0,#0
0001d8  f7fffffe          BL       SDIO_SetPowerState
;;;353    
;;;354      /*!< DeInitializes the SDIO peripheral */
;;;355      SDIO_DeInit();
0001dc  f7fffffe          BL       SDIO_DeInit
;;;356      
;;;357      /* Disable the SDIO APB2 Clock */
;;;358      RCC_APB2PeriphClockCmd(RCC_APB2Periph_SDIO, DISABLE);
0001e0  2100              MOVS     r1,#0
0001e2  f44f6000          MOV      r0,#0x800
0001e6  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;359    
;;;360      GPIO_PinAFConfig(GPIOC, GPIO_PinSource8, GPIO_AF_MCO);
0001ea  2200              MOVS     r2,#0
0001ec  2108              MOVS     r1,#8
0001ee  489a              LDR      r0,|L1.1112|
0001f0  f7fffffe          BL       GPIO_PinAFConfig
;;;361      GPIO_PinAFConfig(GPIOC, GPIO_PinSource9, GPIO_AF_MCO);
0001f4  2200              MOVS     r2,#0
0001f6  2109              MOVS     r1,#9
0001f8  4897              LDR      r0,|L1.1112|
0001fa  f7fffffe          BL       GPIO_PinAFConfig
;;;362      GPIO_PinAFConfig(GPIOC, GPIO_PinSource10, GPIO_AF_MCO);
0001fe  2200              MOVS     r2,#0
000200  210a              MOVS     r1,#0xa
000202  4895              LDR      r0,|L1.1112|
000204  f7fffffe          BL       GPIO_PinAFConfig
;;;363      GPIO_PinAFConfig(GPIOC, GPIO_PinSource11, GPIO_AF_MCO);
000208  2200              MOVS     r2,#0
00020a  210b              MOVS     r1,#0xb
00020c  4892              LDR      r0,|L1.1112|
00020e  f7fffffe          BL       GPIO_PinAFConfig
;;;364      GPIO_PinAFConfig(GPIOC, GPIO_PinSource12, GPIO_AF_MCO);
000212  2200              MOVS     r2,#0
000214  210c              MOVS     r1,#0xc
000216  4890              LDR      r0,|L1.1112|
000218  f7fffffe          BL       GPIO_PinAFConfig
;;;365      GPIO_PinAFConfig(GPIOD, GPIO_PinSource2, GPIO_AF_MCO);
00021c  2200              MOVS     r2,#0
00021e  2102              MOVS     r1,#2
000220  488e              LDR      r0,|L1.1116|
000222  f7fffffe          BL       GPIO_PinAFConfig
;;;366    
;;;367      /* Configure PC.08, PC.09, PC.10, PC.11 pins: D0, D1, D2, D3 pins */
;;;368      GPIO_InitStructure.GPIO_Pin = GPIO_Pin_8 | GPIO_Pin_9 | GPIO_Pin_10 | GPIO_Pin_11;
000226  f44f6070          MOV      r0,#0xf00
00022a  9000              STR      r0,[sp,#0]
;;;369      GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
00022c  2000              MOVS     r0,#0
00022e  f88d0004          STRB     r0,[sp,#4]
;;;370      GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
000232  f88d0007          STRB     r0,[sp,#7]
;;;371      GPIO_Init(GPIOC, &GPIO_InitStructure);
000236  4669              MOV      r1,sp
000238  4887              LDR      r0,|L1.1112|
00023a  f7fffffe          BL       GPIO_Init
;;;372    
;;;373      /* Configure PD.02 CMD line */
;;;374      GPIO_InitStructure.GPIO_Pin = GPIO_Pin_2;
00023e  2004              MOVS     r0,#4
000240  9000              STR      r0,[sp,#0]
;;;375      GPIO_Init(GPIOD, &GPIO_InitStructure);
000242  4669              MOV      r1,sp
000244  4885              LDR      r0,|L1.1116|
000246  f7fffffe          BL       GPIO_Init
;;;376    
;;;377      /* Configure PC.12 pin: CLK pin */
;;;378      GPIO_InitStructure.GPIO_Pin = GPIO_Pin_12;
00024a  f44f5080          MOV      r0,#0x1000
00024e  9000              STR      r0,[sp,#0]
;;;379      GPIO_Init(GPIOC, &GPIO_InitStructure);
000250  4669              MOV      r1,sp
000252  4881              LDR      r0,|L1.1112|
000254  f7fffffe          BL       GPIO_Init
;;;380    }
000258  bd1c              POP      {r2-r4,pc}
;;;381    
                          ENDP

                  SD_LowLevel_Init PROC
;;;387      */
;;;388    void SD_LowLevel_Init(void)
00025a  b51c              PUSH     {r2-r4,lr}
;;;389    {
;;;390      GPIO_InitTypeDef  GPIO_InitStructure;
;;;391    
;;;392      /* GPIOC and GPIOD Periph clock enable */
;;;393      RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOC | RCC_AHB1Periph_GPIOD | SD_DETECT_GPIO_CLK, ENABLE);
00025c  2101              MOVS     r1,#1
00025e  200e              MOVS     r0,#0xe
000260  f7fffffe          BL       RCC_AHB1PeriphClockCmd
;;;394    
;;;395      GPIO_PinAFConfig(GPIOC, GPIO_PinSource8, GPIO_AF_SDIO);
000264  220c              MOVS     r2,#0xc
000266  2108              MOVS     r1,#8
000268  487b              LDR      r0,|L1.1112|
00026a  f7fffffe          BL       GPIO_PinAFConfig
;;;396      GPIO_PinAFConfig(GPIOC, GPIO_PinSource9, GPIO_AF_SDIO);
00026e  220c              MOVS     r2,#0xc
000270  2109              MOVS     r1,#9
000272  4879              LDR      r0,|L1.1112|
000274  f7fffffe          BL       GPIO_PinAFConfig
;;;397      GPIO_PinAFConfig(GPIOC, GPIO_PinSource10, GPIO_AF_SDIO);
000278  220c              MOVS     r2,#0xc
00027a  210a              MOVS     r1,#0xa
00027c  4876              LDR      r0,|L1.1112|
00027e  f7fffffe          BL       GPIO_PinAFConfig
;;;398      GPIO_PinAFConfig(GPIOC, GPIO_PinSource11, GPIO_AF_SDIO);
000282  220c              MOVS     r2,#0xc
000284  210b              MOVS     r1,#0xb
000286  4874              LDR      r0,|L1.1112|
000288  f7fffffe          BL       GPIO_PinAFConfig
;;;399      GPIO_PinAFConfig(GPIOC, GPIO_PinSource12, GPIO_AF_SDIO);
00028c  220c              MOVS     r2,#0xc
00028e  4611              MOV      r1,r2
000290  4871              LDR      r0,|L1.1112|
000292  f7fffffe          BL       GPIO_PinAFConfig
;;;400      GPIO_PinAFConfig(GPIOD, GPIO_PinSource2, GPIO_AF_SDIO);
000296  220c              MOVS     r2,#0xc
000298  2102              MOVS     r1,#2
00029a  4870              LDR      r0,|L1.1116|
00029c  f7fffffe          BL       GPIO_PinAFConfig
;;;401    
;;;402      /* Configure PC.08, PC.09, PC.10, PC.11 pins: D0, D1, D2, D3 pins */
;;;403      GPIO_InitStructure.GPIO_Pin = GPIO_Pin_8 | GPIO_Pin_9 | GPIO_Pin_10 | GPIO_Pin_11;
0002a0  f44f6070          MOV      r0,#0xf00
0002a4  9000              STR      r0,[sp,#0]
;;;404      GPIO_InitStructure.GPIO_Speed = GPIO_Speed_25MHz;
0002a6  2001              MOVS     r0,#1
0002a8  f88d0005          STRB     r0,[sp,#5]
;;;405      GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
0002ac  2002              MOVS     r0,#2
0002ae  f88d0004          STRB     r0,[sp,#4]
;;;406      GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
0002b2  2000              MOVS     r0,#0
0002b4  f88d0006          STRB     r0,[sp,#6]
;;;407      GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
0002b8  2001              MOVS     r0,#1
0002ba  f88d0007          STRB     r0,[sp,#7]
;;;408      GPIO_Init(GPIOC, &GPIO_InitStructure);
0002be  4669              MOV      r1,sp
0002c0  4865              LDR      r0,|L1.1112|
0002c2  f7fffffe          BL       GPIO_Init
;;;409    
;;;410      /* Configure PD.02 CMD line */
;;;411      GPIO_InitStructure.GPIO_Pin = GPIO_Pin_2;
0002c6  2004              MOVS     r0,#4
0002c8  9000              STR      r0,[sp,#0]
;;;412      GPIO_Init(GPIOD, &GPIO_InitStructure);
0002ca  4669              MOV      r1,sp
0002cc  4863              LDR      r0,|L1.1116|
0002ce  f7fffffe          BL       GPIO_Init
;;;413    
;;;414      /* Configure PC.12 pin: CLK pin */
;;;415      GPIO_InitStructure.GPIO_Pin = GPIO_Pin_12;
0002d2  f44f5080          MOV      r0,#0x1000
0002d6  9000              STR      r0,[sp,#0]
;;;416      GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
0002d8  2000              MOVS     r0,#0
0002da  f88d0007          STRB     r0,[sp,#7]
;;;417      GPIO_Init(GPIOC, &GPIO_InitStructure);
0002de  4669              MOV      r1,sp
0002e0  485d              LDR      r0,|L1.1112|
0002e2  f7fffffe          BL       GPIO_Init
;;;418      
;;;419      /*!< Configure SD_SPI_DETECT_PIN pin: SD Card detect pin */
;;;420      GPIO_InitStructure.GPIO_Pin = SD_DETECT_PIN;
0002e6  f44f4000          MOV      r0,#0x8000
0002ea  9000              STR      r0,[sp,#0]
;;;421      GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
0002ec  2000              MOVS     r0,#0
0002ee  f88d0004          STRB     r0,[sp,#4]
;;;422      GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
0002f2  2001              MOVS     r0,#1
0002f4  f88d0007          STRB     r0,[sp,#7]
;;;423      GPIO_Init(SD_DETECT_GPIO_PORT, &GPIO_InitStructure);
0002f8  4669              MOV      r1,sp
0002fa  4859              LDR      r0,|L1.1120|
0002fc  f7fffffe          BL       GPIO_Init
;;;424    
;;;425      /* Enable the SDIO APB2 Clock */
;;;426      RCC_APB2PeriphClockCmd(RCC_APB2Periph_SDIO, ENABLE);
000300  2101              MOVS     r1,#1
000302  02c8              LSLS     r0,r1,#11
000304  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;427    
;;;428      /* Enable the DMA2 Clock */
;;;429      RCC_AHB1PeriphClockCmd(SD_SDIO_DMA_CLK, ENABLE);
000308  2101              MOVS     r1,#1
00030a  0588              LSLS     r0,r1,#22
00030c  f7fffffe          BL       RCC_AHB1PeriphClockCmd
;;;430    }
000310  bd1c              POP      {r2-r4,pc}
;;;431    
                          ENDP

                  SD_LowLevel_DMA_TxConfig PROC
;;;437      */
;;;438    void SD_LowLevel_DMA_TxConfig(uint32_t *BufferSRC, uint32_t BufferSize)
000312  b530              PUSH     {r4,r5,lr}
;;;439    {
000314  b08f              SUB      sp,sp,#0x3c
000316  4604              MOV      r4,r0
000318  460d              MOV      r5,r1
;;;440      DMA_InitTypeDef SDDMA_InitStructure;
;;;441    
;;;442      DMA_ClearFlag(SD_SDIO_DMA_STREAM, SD_SDIO_DMA_FLAG_FEIF | SD_SDIO_DMA_FLAG_DMEIF | SD_SDIO_DMA_FLAG_TEIF | SD_SDIO_DMA_FLAG_HTIF | SD_SDIO_DMA_FLAG_TCIF);
00031a  f04f51fa          MOV      r1,#0x1f400000
00031e  4851              LDR      r0,|L1.1124|
000320  f7fffffe          BL       DMA_ClearFlag
;;;443    
;;;444      /* DMA2 Stream3  or Stream6 disable */
;;;445      DMA_Cmd(SD_SDIO_DMA_STREAM, DISABLE);
000324  2100              MOVS     r1,#0
000326  484f              LDR      r0,|L1.1124|
000328  f7fffffe          BL       DMA_Cmd
;;;446    
;;;447      /* DMA2 Stream3  or Stream6 Config */
;;;448      DMA_DeInit(SD_SDIO_DMA_STREAM);
00032c  484d              LDR      r0,|L1.1124|
00032e  f7fffffe          BL       DMA_DeInit
;;;449    
;;;450      SDDMA_InitStructure.DMA_Channel = SD_SDIO_DMA_CHANNEL;
000332  f04f6000          MOV      r0,#0x8000000
000336  9000              STR      r0,[sp,#0]
;;;451      SDDMA_InitStructure.DMA_PeripheralBaseAddr = (uint32_t)SDIO_FIFO_ADDRESS;
000338  484b              LDR      r0,|L1.1128|
00033a  9001              STR      r0,[sp,#4]
;;;452      SDDMA_InitStructure.DMA_Memory0BaseAddr = (uint32_t)BufferSRC;
00033c  9402              STR      r4,[sp,#8]
;;;453      SDDMA_InitStructure.DMA_DIR = DMA_DIR_MemoryToPeripheral;
00033e  2040              MOVS     r0,#0x40
000340  9003              STR      r0,[sp,#0xc]
;;;454      SDDMA_InitStructure.DMA_BufferSize = 0;
000342  2000              MOVS     r0,#0
000344  9004              STR      r0,[sp,#0x10]
;;;455      SDDMA_InitStructure.DMA_PeripheralInc = DMA_PeripheralInc_Disable;
000346  9005              STR      r0,[sp,#0x14]
;;;456      SDDMA_InitStructure.DMA_MemoryInc = DMA_MemoryInc_Enable;
000348  f44f6080          MOV      r0,#0x400
00034c  9006              STR      r0,[sp,#0x18]
;;;457      SDDMA_InitStructure.DMA_PeripheralDataSize = DMA_PeripheralDataSize_Word;
00034e  0080              LSLS     r0,r0,#2
000350  9007              STR      r0,[sp,#0x1c]
;;;458      SDDMA_InitStructure.DMA_MemoryDataSize = DMA_MemoryDataSize_Word;
000352  0080              LSLS     r0,r0,#2
000354  9008              STR      r0,[sp,#0x20]
;;;459      SDDMA_InitStructure.DMA_Mode = DMA_Mode_Normal;
000356  2000              MOVS     r0,#0
000358  9009              STR      r0,[sp,#0x24]
;;;460      SDDMA_InitStructure.DMA_Priority = DMA_Priority_VeryHigh;
00035a  f44f3040          MOV      r0,#0x30000
00035e  900a              STR      r0,[sp,#0x28]
;;;461      SDDMA_InitStructure.DMA_FIFOMode = DMA_FIFOMode_Enable;
000360  2004              MOVS     r0,#4
000362  900b              STR      r0,[sp,#0x2c]
;;;462      SDDMA_InitStructure.DMA_FIFOThreshold = DMA_FIFOThreshold_Full;
000364  2003              MOVS     r0,#3
000366  900c              STR      r0,[sp,#0x30]
;;;463      SDDMA_InitStructure.DMA_MemoryBurst = DMA_MemoryBurst_INC4;
000368  f44f0000          MOV      r0,#0x800000
00036c  900d              STR      r0,[sp,#0x34]
;;;464      SDDMA_InitStructure.DMA_PeripheralBurst = DMA_PeripheralBurst_INC4;
00036e  1080              ASRS     r0,r0,#2
000370  900e              STR      r0,[sp,#0x38]
;;;465      DMA_Init(SD_SDIO_DMA_STREAM, &SDDMA_InitStructure);
000372  4669              MOV      r1,sp
000374  483b              LDR      r0,|L1.1124|
000376  f7fffffe          BL       DMA_Init
;;;466      DMA_ITConfig(SD_SDIO_DMA_STREAM, DMA_IT_TC, ENABLE);
00037a  2201              MOVS     r2,#1
00037c  2110              MOVS     r1,#0x10
00037e  4839              LDR      r0,|L1.1124|
000380  f7fffffe          BL       DMA_ITConfig
;;;467      DMA_FlowControllerConfig(SD_SDIO_DMA_STREAM, DMA_FlowCtrl_Peripheral);
000384  2120              MOVS     r1,#0x20
000386  4837              LDR      r0,|L1.1124|
000388  f7fffffe          BL       DMA_FlowControllerConfig
;;;468    
;;;469      /* DMA2 Stream3  or Stream6 enable */
;;;470      DMA_Cmd(SD_SDIO_DMA_STREAM, ENABLE);
00038c  2101              MOVS     r1,#1
00038e  4835              LDR      r0,|L1.1124|
000390  f7fffffe          BL       DMA_Cmd
;;;471        
;;;472    }
000394  b00f              ADD      sp,sp,#0x3c
000396  bd30              POP      {r4,r5,pc}
;;;473    
                          ENDP

                  SD_LowLevel_DMA_RxConfig PROC
;;;479      */
;;;480    void SD_LowLevel_DMA_RxConfig(uint32_t *BufferDST, uint32_t BufferSize)
000398  b530              PUSH     {r4,r5,lr}
;;;481    {
00039a  b08f              SUB      sp,sp,#0x3c
00039c  4604              MOV      r4,r0
00039e  460d              MOV      r5,r1
;;;482      DMA_InitTypeDef SDDMA_InitStructure;
;;;483    
;;;484      DMA_ClearFlag(SD_SDIO_DMA_STREAM, SD_SDIO_DMA_FLAG_FEIF | SD_SDIO_DMA_FLAG_DMEIF | SD_SDIO_DMA_FLAG_TEIF | SD_SDIO_DMA_FLAG_HTIF | SD_SDIO_DMA_FLAG_TCIF);
0003a0  f04f51fa          MOV      r1,#0x1f400000
0003a4  482f              LDR      r0,|L1.1124|
0003a6  f7fffffe          BL       DMA_ClearFlag
;;;485    
;;;486      /* DMA2 Stream3  or Stream6 disable */
;;;487      DMA_Cmd(SD_SDIO_DMA_STREAM, DISABLE);
0003aa  2100              MOVS     r1,#0
0003ac  482d              LDR      r0,|L1.1124|
0003ae  f7fffffe          BL       DMA_Cmd
;;;488    
;;;489      /* DMA2 Stream3 or Stream6 Config */
;;;490      DMA_DeInit(SD_SDIO_DMA_STREAM);
0003b2  482c              LDR      r0,|L1.1124|
0003b4  f7fffffe          BL       DMA_DeInit
;;;491    
;;;492      SDDMA_InitStructure.DMA_Channel = SD_SDIO_DMA_CHANNEL;
0003b8  f04f6000          MOV      r0,#0x8000000
0003bc  9000              STR      r0,[sp,#0]
;;;493      SDDMA_InitStructure.DMA_PeripheralBaseAddr = (uint32_t)SDIO_FIFO_ADDRESS;
0003be  482a              LDR      r0,|L1.1128|
0003c0  9001              STR      r0,[sp,#4]
;;;494      SDDMA_InitStructure.DMA_Memory0BaseAddr = (uint32_t)BufferDST;
0003c2  9402              STR      r4,[sp,#8]
;;;495      SDDMA_InitStructure.DMA_DIR = DMA_DIR_PeripheralToMemory;
0003c4  2000              MOVS     r0,#0
0003c6  9003              STR      r0,[sp,#0xc]
;;;496      SDDMA_InitStructure.DMA_BufferSize = 0;
0003c8  9004              STR      r0,[sp,#0x10]
;;;497      SDDMA_InitStructure.DMA_PeripheralInc = DMA_PeripheralInc_Disable;
0003ca  9005              STR      r0,[sp,#0x14]
;;;498      SDDMA_InitStructure.DMA_MemoryInc = DMA_MemoryInc_Enable;
0003cc  f44f6080          MOV      r0,#0x400
0003d0  9006              STR      r0,[sp,#0x18]
;;;499      SDDMA_InitStructure.DMA_PeripheralDataSize = DMA_PeripheralDataSize_Word;
0003d2  0080              LSLS     r0,r0,#2
0003d4  9007              STR      r0,[sp,#0x1c]
;;;500      SDDMA_InitStructure.DMA_MemoryDataSize = DMA_MemoryDataSize_Word;
0003d6  0080              LSLS     r0,r0,#2
0003d8  9008              STR      r0,[sp,#0x20]
;;;501      SDDMA_InitStructure.DMA_Mode = DMA_Mode_Normal;
0003da  2000              MOVS     r0,#0
0003dc  9009              STR      r0,[sp,#0x24]
;;;502      SDDMA_InitStructure.DMA_Priority = DMA_Priority_VeryHigh;
0003de  f44f3040          MOV      r0,#0x30000
0003e2  900a              STR      r0,[sp,#0x28]
;;;503      SDDMA_InitStructure.DMA_FIFOMode = DMA_FIFOMode_Enable;
0003e4  2004              MOVS     r0,#4
0003e6  900b              STR      r0,[sp,#0x2c]
;;;504      SDDMA_InitStructure.DMA_FIFOThreshold = DMA_FIFOThreshold_Full;
0003e8  2003              MOVS     r0,#3
0003ea  900c              STR      r0,[sp,#0x30]
;;;505      SDDMA_InitStructure.DMA_MemoryBurst = DMA_MemoryBurst_INC4;
0003ec  f44f0000          MOV      r0,#0x800000
0003f0  900d              STR      r0,[sp,#0x34]
;;;506      SDDMA_InitStructure.DMA_PeripheralBurst = DMA_PeripheralBurst_INC4;
0003f2  1080              ASRS     r0,r0,#2
0003f4  900e              STR      r0,[sp,#0x38]
;;;507      DMA_Init(SD_SDIO_DMA_STREAM, &SDDMA_InitStructure);
0003f6  4669              MOV      r1,sp
0003f8  481a              LDR      r0,|L1.1124|
0003fa  f7fffffe          BL       DMA_Init
;;;508      DMA_ITConfig(SD_SDIO_DMA_STREAM, DMA_IT_TC, ENABLE);
0003fe  e035              B        |L1.1132|
                  |L1.1024|
                          DCD      GPIO_CLK
                  |L1.1028|
                          DCD      GPIO_PIN
                  |L1.1032|
                          DCD      GPIO_PORT
                  |L1.1036|
                          DCD      BUTTON_CLK
                  |L1.1040|
                          DCD      BUTTON_PIN
                  |L1.1044|
                          DCD      BUTTON_PORT
                  |L1.1048|
                          DCD      BUTTON_PIN_SOURCE
                  |L1.1052|
                          DCD      BUTTON_PORT_SOURCE
                  |L1.1056|
                          DCD      BUTTON_EXTI_LINE
                  |L1.1060|
                          DCD      BUTTON_IRQn
                  |L1.1064|
                          DCD      COM_TX_PORT_CLK
                  |L1.1068|
                          DCD      COM_RX_PORT_CLK
                  |L1.1072|
                          DCD      COM_USART_CLK
                  |L1.1076|
                          DCD      COM_TX_AF
                  |L1.1080|
                          DCD      COM_TX_PIN_SOURCE
                  |L1.1084|
                          DCD      COM_TX_PORT
                  |L1.1088|
                          DCD      COM_RX_AF
                  |L1.1092|
                          DCD      COM_RX_PIN_SOURCE
                  |L1.1096|
                          DCD      COM_RX_PORT
                  |L1.1100|
                          DCD      COM_TX_PIN
                  |L1.1104|
                          DCD      COM_RX_PIN
                  |L1.1108|
                          DCD      COM_USART
                  |L1.1112|
                          DCD      0x40020800
                  |L1.1116|
                          DCD      0x40020c00
                  |L1.1120|
                          DCD      0x40020400
                  |L1.1124|
                          DCD      0x40026458
                  |L1.1128|
                          DCD      0x40012c80
                  |L1.1132|
00046c  2201              MOVS     r2,#1
00046e  2110              MOVS     r1,#0x10
000470  4806              LDR      r0,|L1.1164|
000472  f7fffffe          BL       DMA_ITConfig
;;;509      DMA_FlowControllerConfig(SD_SDIO_DMA_STREAM, DMA_FlowCtrl_Peripheral);
000476  2120              MOVS     r1,#0x20
000478  4804              LDR      r0,|L1.1164|
00047a  f7fffffe          BL       DMA_FlowControllerConfig
;;;510    
;;;511      /* DMA2 Stream3 or Stream6 enable */
;;;512      DMA_Cmd(SD_SDIO_DMA_STREAM, ENABLE);
00047e  2101              MOVS     r1,#1
000480  4802              LDR      r0,|L1.1164|
000482  f7fffffe          BL       DMA_Cmd
;;;513    }
000486  b00f              ADD      sp,sp,#0x3c
000488  bd30              POP      {r4,r5,pc}
;;;514    
                          ENDP

00048a  0000              DCW      0x0000
                  |L1.1164|
                          DCD      0x40026458

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  GPIO_PIN
000000  00012000          DCW      0x0001,0x2000
000004  40008000          DCW      0x4000,0x8000
                  GPIO_CLK
                          DCD      0x00000008
                          DCD      0x00000008
                          DCD      0x00000008
                          DCD      0x00000008
                  BUTTON_PIN
000018  0001              DCW      0x0001
00001a  0000              DCB      0x00,0x00
                  BUTTON_CLK
                          DCD      0x00000001
                  BUTTON_EXTI_LINE
000020  0001              DCW      0x0001
                  BUTTON_PORT_SOURCE
000022  00                DCB      0x00
                  BUTTON_PIN_SOURCE
000023  00                DCB      0x00
                  BUTTON_IRQn
000024  06000000          DCB      0x06,0x00,0x00,0x00
                  COM_USART_CLK
                          DCD      0x00000020
                          DCD      0x00040000
                  COM_TX_PORT_CLK
                          DCD      0x00000004
                          DCD      0x00000004
                  COM_RX_PORT_CLK
                          DCD      0x00000004
                          DCD      0x00000004
                  COM_TX_PIN
000040  00400400          DCW      0x0040,0x0400
                  COM_RX_PIN
000044  00800800          DCW      0x0080,0x0800
                  COM_TX_PIN_SOURCE
000048  0006000a          DCW      0x0006,0x000a
                  COM_RX_PIN_SOURCE
00004c  0007000b          DCW      0x0007,0x000b
                  COM_TX_AF
000050  00080007          DCW      0x0008,0x0007
                  COM_RX_AF
000054  00080007          DCW      0x0008,0x0007

                          AREA ||.data||, DATA, ALIGN=2

                  GPIO_PORT
                          DCD      0x40020c00
                          DCD      0x40020c00
                          DCD      0x40020c00
                          DCD      0x40020c00
                  BUTTON_PORT
                          DCD      0x40020000
                  COM_USART
                          DCD      0x40011400
                          DCD      0x40004800
                  COM_TX_PORT
                          DCD      0x40020800
                          DCD      0x40020800
                  COM_RX_PORT
                          DCD      0x40020800
                          DCD      0x40020800
                  NVIC_InitStructure
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\..\\libraries\\STM32F4-Discovery\\stm32f4_discovery.c"
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__asm___19_stm32f4_discovery_c_c84236cb____REV16|
#line 114 "..\\..\\libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___19_stm32f4_discovery_c_c84236cb____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__asm___19_stm32f4_discovery_c_c84236cb____REVSH|
#line 128
|__asm___19_stm32f4_discovery_c_c84236cb____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
