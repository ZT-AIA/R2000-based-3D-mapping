; generated by Component: ARM Compiler 5.06 update 2 (build 183) Tool: ArmCC [4d35cd]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\discovery\netif.o --asm_dir=.\Discovery\ --list_dir=.\Discovery\ --depend=.\discovery\netif.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\inc -I..\src -I..\..\libraries\CMSIS\Include -I..\..\libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\libraries\STM32F4x7_ETH_Driver\inc -I..\..\libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\libraries\STM32F4-Discovery -I..\..\libraries\lwip-1.4.1\port\STM32F4x7 -I..\..\libraries\lwip-1.4.1\src\include -I..\..\libraries\lwip-1.4.1\src\include\ipv4 -I..\..\libraries\lwip-1.4.1\src\include\lwip -I..\..\libraries\lwip-1.4.1\src\include\netif -I..\..\libraries\lwip-1.4.1\port\STM32F4x7\arch -I..\..\libraries\rtx-v4.73\INC -I..\..\libraries\rtx-v4.73\SRC -I..\..\libraries\ptpd-2.0.0\src -I..\inc\system -I..\inc\laser -I..\inc\motorCtrl -I..\..\libraries\lwip-1.4.1\src\include\ipv4\lwip -Id:\Keil_v5\ARM\RV31\INC -Id:\Keil_v5\ARM\CMSIS\Include -Id:\Keil_v5\ARM\Inc\ST\STM32F4xx -D__MICROLIB -D__UVISION_VERSION=520 -DSTM32F40_41xxx -DUSE_STDPERIPH_DRIVER -D__CORTEX_M4F -D__FPU_PRESENT -D__CMSIS_RTOS -DSTM32F40_41xxx --omf_browse=.\discovery\netif.crf ..\..\libraries\lwip-1.4.1\src\core\netif.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  netif_init PROC
;;;105    void
;;;106    netif_init(void)
000000  4770              BX       lr
;;;107    {
;;;108    #if LWIP_HAVE_LOOPIF
;;;109      ip_addr_t loop_ipaddr, loop_netmask, loop_gw;
;;;110      IP4_ADDR(&loop_gw, 127,0,0,1);
;;;111      IP4_ADDR(&loop_ipaddr, 127,0,0,1);
;;;112      IP4_ADDR(&loop_netmask, 255,0,0,0);
;;;113    
;;;114    #if NO_SYS
;;;115      netif_add(&loop_netif, &loop_ipaddr, &loop_netmask, &loop_gw, NULL, netif_loopif_init, ip_input);
;;;116    #else  /* NO_SYS */
;;;117      netif_add(&loop_netif, &loop_ipaddr, &loop_netmask, &loop_gw, NULL, netif_loopif_init, tcpip_input);
;;;118    #endif /* NO_SYS */
;;;119      netif_set_up(&loop_netif);
;;;120    
;;;121    #endif /* LWIP_HAVE_LOOPIF */
;;;122    }
;;;123    
                          ENDP

                  netif_set_gw PROC
;;;387    void
;;;388    netif_set_gw(struct netif *netif, ip_addr_t *gw)
000002  b909              CBNZ     r1,|L1.8|
;;;389    {
;;;390      ip_addr_set(&(netif->gw), gw);
000004  2200              MOVS     r2,#0
000006  e000              B        |L1.10|
                  |L1.8|
000008  680a              LDR      r2,[r1,#0]
                  |L1.10|
00000a  60c2              STR      r2,[r0,#0xc]
;;;391      LWIP_DEBUGF(NETIF_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_STATE, ("netif: GW address of interface %c%c set to %"U16_F".%"U16_F".%"U16_F".%"U16_F"\n",
00000c  bf00              NOP      
00000e  bf00              NOP      
;;;392        netif->name[0], netif->name[1],
;;;393        ip4_addr1_16(&netif->gw),
;;;394        ip4_addr2_16(&netif->gw),
;;;395        ip4_addr3_16(&netif->gw),
;;;396        ip4_addr4_16(&netif->gw)));
;;;397    }
000010  4770              BX       lr
;;;398    
                          ENDP

                  netif_set_netmask PROC
;;;408    void
;;;409    netif_set_netmask(struct netif *netif, ip_addr_t *netmask)
000012  b909              CBNZ     r1,|L1.24|
;;;410    {
;;;411      snmp_delete_iprteidx_tree(0, netif);
;;;412      /* set new netmask to netif */
;;;413      ip_addr_set(&(netif->netmask), netmask);
000014  2200              MOVS     r2,#0
000016  e000              B        |L1.26|
                  |L1.24|
000018  680a              LDR      r2,[r1,#0]
                  |L1.26|
00001a  6082              STR      r2,[r0,#8]
;;;414      snmp_insert_iprteidx_tree(0, netif);
;;;415      LWIP_DEBUGF(NETIF_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_STATE, ("netif: netmask of interface %c%c set to %"U16_F".%"U16_F".%"U16_F".%"U16_F"\n",
00001c  bf00              NOP      
00001e  bf00              NOP      
;;;416        netif->name[0], netif->name[1],
;;;417        ip4_addr1_16(&netif->netmask),
;;;418        ip4_addr2_16(&netif->netmask),
;;;419        ip4_addr3_16(&netif->netmask),
;;;420        ip4_addr4_16(&netif->netmask)));
;;;421    }
000020  4770              BX       lr
;;;422    
                          ENDP

                  netif_set_ipaddr PROC
;;;322    void
;;;323    netif_set_ipaddr(struct netif *netif, ip_addr_t *ipaddr)
000022  e92d41f0          PUSH     {r4-r8,lr}
;;;324    {
000026  4607              MOV      r7,r0
000028  460c              MOV      r4,r1
;;;325      /* TODO: Handling of obsolete pcbs */
;;;326      /* See:  http://mail.gnu.org/archive/html/lwip-users/2003-03/msg00118.html */
;;;327    #if LWIP_TCP
;;;328      struct tcp_pcb *pcb;
;;;329      struct tcp_pcb_listen *lpcb;
;;;330    
;;;331      /* address is actually being changed? */
;;;332      if (ipaddr && (ip_addr_cmp(ipaddr, &(netif->ip_addr))) == 0) {
00002a  2c00              CMP      r4,#0
00002c  d02e              BEQ      |L1.140|
00002e  6820              LDR      r0,[r4,#0]
000030  6879              LDR      r1,[r7,#4]
000032  4288              CMP      r0,r1
000034  d101              BNE      |L1.58|
000036  2001              MOVS     r0,#1
000038  e000              B        |L1.60|
                  |L1.58|
00003a  2000              MOVS     r0,#0
                  |L1.60|
00003c  bb30              CBNZ     r0,|L1.140|
;;;333        /* extern struct tcp_pcb *tcp_active_pcbs; defined by tcp.h */
;;;334        LWIP_DEBUGF(NETIF_DEBUG | LWIP_DBG_STATE, ("netif_set_ipaddr: netif address being changed\n"));
00003e  bf00              NOP      
000040  bf00              NOP      
;;;335        pcb = tcp_active_pcbs;
000042  48ac              LDR      r0,|L1.756|
000044  6806              LDR      r6,[r0,#0]  ; tcp_active_pcbs
;;;336        while (pcb != NULL) {
000046  e00d              B        |L1.100|
                  |L1.72|
;;;337          /* PCB bound to current local interface address? */
;;;338          if (ip_addr_cmp(&(pcb->local_ip), &(netif->ip_addr))
000048  6830              LDR      r0,[r6,#0]
00004a  6879              LDR      r1,[r7,#4]
00004c  4288              CMP      r0,r1
00004e  d108              BNE      |L1.98|
;;;339    #if LWIP_AUTOIP
;;;340            /* connections to link-local addresses must persist (RFC3927 ch. 1.9) */
;;;341            && !ip_addr_islinklocal(&(pcb->local_ip))
;;;342    #endif /* LWIP_AUTOIP */
;;;343            ) {
;;;344            /* this connection must be aborted */
;;;345            struct tcp_pcb *next = pcb->next;
000050  f8d6800c          LDR      r8,[r6,#0xc]
;;;346            LWIP_DEBUGF(NETIF_DEBUG | LWIP_DBG_STATE, ("netif_set_ipaddr: aborting TCP pcb %p\n", (void *)pcb));
000054  bf00              NOP      
000056  bf00              NOP      
;;;347            tcp_abort(pcb);
000058  4630              MOV      r0,r6
00005a  f7fffffe          BL       tcp_abort
;;;348            pcb = next;
00005e  4646              MOV      r6,r8
;;;349          } else {
000060  e000              B        |L1.100|
                  |L1.98|
;;;350            pcb = pcb->next;
000062  68f6              LDR      r6,[r6,#0xc]
                  |L1.100|
000064  2e00              CMP      r6,#0                 ;336
000066  d1ef              BNE      |L1.72|
;;;351          }
;;;352        }
;;;353        for (lpcb = tcp_listen_pcbs.listen_pcbs; lpcb != NULL; lpcb = lpcb->next) {
000068  48a3              LDR      r0,|L1.760|
00006a  6805              LDR      r5,[r0,#0]  ; tcp_listen_pcbs
00006c  e00c              B        |L1.136|
                  |L1.110|
;;;354          /* PCB bound to current local interface address? */
;;;355          if ((!(ip_addr_isany(&(lpcb->local_ip)))) &&
00006e  b155              CBZ      r5,|L1.134|
000070  6828              LDR      r0,[r5,#0]
000072  b140              CBZ      r0,|L1.134|
;;;356              (ip_addr_cmp(&(lpcb->local_ip), &(netif->ip_addr)))) {
000074  6828              LDR      r0,[r5,#0]
000076  6879              LDR      r1,[r7,#4]
000078  4288              CMP      r0,r1
00007a  d104              BNE      |L1.134|
;;;357            /* The PCB is listening to the old ipaddr and
;;;358             * is set to listen to the new one instead */
;;;359            ip_addr_set(&(lpcb->local_ip), ipaddr);
00007c  b90c              CBNZ     r4,|L1.130|
00007e  2000              MOVS     r0,#0
000080  e000              B        |L1.132|
                  |L1.130|
000082  6820              LDR      r0,[r4,#0]
                  |L1.132|
000084  6028              STR      r0,[r5,#0]
                  |L1.134|
000086  68ed              LDR      r5,[r5,#0xc]          ;353
                  |L1.136|
000088  2d00              CMP      r5,#0                 ;353
00008a  d1f0              BNE      |L1.110|
                  |L1.140|
;;;360          }
;;;361        }
;;;362      }
;;;363    #endif
;;;364      snmp_delete_ipaddridx_tree(netif);
;;;365      snmp_delete_iprteidx_tree(0,netif);
;;;366      /* set new IP address to netif */
;;;367      ip_addr_set(&(netif->ip_addr), ipaddr);
00008c  b90c              CBNZ     r4,|L1.146|
00008e  2000              MOVS     r0,#0
000090  e000              B        |L1.148|
                  |L1.146|
000092  6820              LDR      r0,[r4,#0]
                  |L1.148|
000094  6078              STR      r0,[r7,#4]
;;;368      snmp_insert_ipaddridx_tree(netif);
;;;369      snmp_insert_iprteidx_tree(0,netif);
;;;370    
;;;371      LWIP_DEBUGF(NETIF_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_STATE, ("netif: IP address of interface %c%c set to %"U16_F".%"U16_F".%"U16_F".%"U16_F"\n",
000096  bf00              NOP      
000098  bf00              NOP      
;;;372        netif->name[0], netif->name[1],
;;;373        ip4_addr1_16(&netif->ip_addr),
;;;374        ip4_addr2_16(&netif->ip_addr),
;;;375        ip4_addr3_16(&netif->ip_addr),
;;;376        ip4_addr4_16(&netif->ip_addr)));
;;;377    }
00009a  e8bd81f0          POP      {r4-r8,pc}
;;;378    
                          ENDP

                  netif_set_addr PROC
;;;220    void
;;;221    netif_set_addr(struct netif *netif, ip_addr_t *ipaddr, ip_addr_t *netmask,
00009e  e92d41f0          PUSH     {r4-r8,lr}
;;;222        ip_addr_t *gw)
;;;223    {
0000a2  4606              MOV      r6,r0
0000a4  460f              MOV      r7,r1
0000a6  4614              MOV      r4,r2
0000a8  461d              MOV      r5,r3
;;;224      netif_set_ipaddr(netif, ipaddr);
0000aa  4639              MOV      r1,r7
0000ac  4630              MOV      r0,r6
0000ae  f7fffffe          BL       netif_set_ipaddr
;;;225      netif_set_netmask(netif, netmask);
0000b2  4621              MOV      r1,r4
0000b4  4630              MOV      r0,r6
0000b6  f7fffffe          BL       netif_set_netmask
;;;226      netif_set_gw(netif, gw);
0000ba  4629              MOV      r1,r5
0000bc  4630              MOV      r0,r6
0000be  f7fffffe          BL       netif_set_gw
;;;227    }
0000c2  e8bd81f0          POP      {r4-r8,pc}
;;;228    
                          ENDP

                  netif_add PROC
;;;138    struct netif *
;;;139    netif_add(struct netif *netif, ip_addr_t *ipaddr, ip_addr_t *netmask,
0000c6  e92d47f0          PUSH     {r4-r10,lr}
;;;140      ip_addr_t *gw, void *state, netif_init_fn init, netif_input_fn input)
;;;141    {
0000ca  4604              MOV      r4,r0
0000cc  460d              MOV      r5,r1
0000ce  4616              MOV      r6,r2
0000d0  461f              MOV      r7,r3
0000d2  e9dda909          LDRD     r10,r9,[sp,#0x24]
0000d6  f8dd8020          LDR      r8,[sp,#0x20]
;;;142    
;;;143      LWIP_ASSERT("No init function given", init != NULL);
0000da  bf00              NOP      
0000dc  bf00              NOP      
;;;144    
;;;145      /* reset new interface configuration state */
;;;146      ip_addr_set_zero(&netif->ip_addr);
0000de  2000              MOVS     r0,#0
0000e0  6060              STR      r0,[r4,#4]
;;;147      ip_addr_set_zero(&netif->netmask);
0000e2  60a0              STR      r0,[r4,#8]
;;;148      ip_addr_set_zero(&netif->gw);
0000e4  60e0              STR      r0,[r4,#0xc]
;;;149      netif->flags = 0;
0000e6  f884002d          STRB     r0,[r4,#0x2d]
;;;150    #if LWIP_DHCP
;;;151      /* netif not under DHCP control by default */
;;;152      netif->dhcp = NULL;
0000ea  6220              STR      r0,[r4,#0x20]
;;;153    #endif /* LWIP_DHCP */
;;;154    #if LWIP_AUTOIP
;;;155      /* netif not under AutoIP control by default */
;;;156      netif->autoip = NULL;
;;;157    #endif /* LWIP_AUTOIP */
;;;158    #if LWIP_NETIF_STATUS_CALLBACK
;;;159      netif->status_callback = NULL;
;;;160    #endif /* LWIP_NETIF_STATUS_CALLBACK */
;;;161    #if LWIP_NETIF_LINK_CALLBACK
;;;162      netif->link_callback = NULL;
;;;163    #endif /* LWIP_NETIF_LINK_CALLBACK */
;;;164    #if LWIP_IGMP
;;;165      netif->igmp_mac_filter = NULL;
0000ec  6360              STR      r0,[r4,#0x34]
;;;166    #endif /* LWIP_IGMP */
;;;167    #if ENABLE_LOOPBACK
;;;168      netif->loop_first = NULL;
;;;169      netif->loop_last = NULL;
;;;170    #endif /* ENABLE_LOOPBACK */
;;;171    
;;;172      /* remember netif specific state information data */
;;;173      netif->state = state;
0000ee  f8c4801c          STR      r8,[r4,#0x1c]
;;;174      netif->num = netif_num++;
0000f2  4882              LDR      r0,|L1.764|
0000f4  7800              LDRB     r0,[r0,#0]  ; netif_num
0000f6  f8840030          STRB     r0,[r4,#0x30]
0000fa  4880              LDR      r0,|L1.764|
0000fc  7800              LDRB     r0,[r0,#0]  ; netif_num
0000fe  1c40              ADDS     r0,r0,#1
000100  497e              LDR      r1,|L1.764|
000102  7008              STRB     r0,[r1,#0]
;;;175      netif->input = input;
000104  f8c49010          STR      r9,[r4,#0x10]
;;;176      NETIF_SET_HWADDRHINT(netif, NULL);
;;;177    #if ENABLE_LOOPBACK && LWIP_LOOPBACK_MAX_PBUFS
;;;178      netif->loop_cnt_current = 0;
;;;179    #endif /* ENABLE_LOOPBACK && LWIP_LOOPBACK_MAX_PBUFS */
;;;180    
;;;181      netif_set_addr(netif, ipaddr, netmask, gw);
000108  463b              MOV      r3,r7
00010a  4632              MOV      r2,r6
00010c  4629              MOV      r1,r5
00010e  4620              MOV      r0,r4
000110  f7fffffe          BL       netif_set_addr
;;;182    
;;;183      /* call user specified initialization function for netif */
;;;184      if (init(netif) != ERR_OK) {
000114  4620              MOV      r0,r4
000116  47d0              BLX      r10
000118  b110              CBZ      r0,|L1.288|
;;;185        return NULL;
00011a  2000              MOVS     r0,#0
                  |L1.284|
;;;186      }
;;;187    
;;;188      /* add this netif to the list */
;;;189      netif->next = netif_list;
;;;190      netif_list = netif;
;;;191      snmp_inc_iflist();
;;;192    
;;;193    #if LWIP_IGMP
;;;194      /* start IGMP processing */
;;;195      if (netif->flags & NETIF_FLAG_IGMP) {
;;;196        igmp_start(netif);
;;;197      }
;;;198    #endif /* LWIP_IGMP */
;;;199    
;;;200      LWIP_DEBUGF(NETIF_DEBUG, ("netif: added interface %c%c IP addr ",
;;;201        netif->name[0], netif->name[1]));
;;;202      ip_addr_debug_print(NETIF_DEBUG, ipaddr);
;;;203      LWIP_DEBUGF(NETIF_DEBUG, (" netmask "));
;;;204      ip_addr_debug_print(NETIF_DEBUG, netmask);
;;;205      LWIP_DEBUGF(NETIF_DEBUG, (" gw "));
;;;206      ip_addr_debug_print(NETIF_DEBUG, gw);
;;;207      LWIP_DEBUGF(NETIF_DEBUG, ("\n"));
;;;208      return netif;
;;;209    }
00011c  e8bd87f0          POP      {r4-r10,pc}
                  |L1.288|
000120  4877              LDR      r0,|L1.768|
000122  6800              LDR      r0,[r0,#0]            ;189  ; netif_list
000124  6020              STR      r0,[r4,#0]            ;189
000126  4876              LDR      r0,|L1.768|
000128  6004              STR      r4,[r0,#0]            ;190  ; netif_list
00012a  f894002d          LDRB     r0,[r4,#0x2d]         ;195
00012e  f0000080          AND      r0,r0,#0x80           ;195
000132  b110              CBZ      r0,|L1.314|
000134  4620              MOV      r0,r4                 ;196
000136  f7fffffe          BL       igmp_start
                  |L1.314|
00013a  bf00              NOP                            ;200
00013c  bf00              NOP                            ;200
00013e  bf00              NOP                            ;202
000140  bf00              NOP                            ;202
000142  bf00              NOP                            ;203
000144  bf00              NOP                            ;203
000146  bf00              NOP                            ;204
000148  bf00              NOP                            ;204
00014a  bf00              NOP                            ;205
00014c  bf00              NOP                            ;205
00014e  bf00              NOP                            ;206
000150  bf00              NOP                            ;206
000152  bf00              NOP                            ;207
000154  bf00              NOP                            ;207
000156  4620              MOV      r0,r4                 ;208
000158  e7e0              B        |L1.284|
;;;210    
                          ENDP

                  netif_set_default PROC
;;;429    void
;;;430    netif_set_default(struct netif *netif)
00015a  496a              LDR      r1,|L1.772|
;;;431    {
;;;432      if (netif == NULL) {
;;;433        /* remove default route */
;;;434        snmp_delete_iprteidx_tree(1, netif);
;;;435      } else {
;;;436        /* install default route */
;;;437        snmp_insert_iprteidx_tree(1, netif);
;;;438      }
;;;439      netif_default = netif;
00015c  6008              STR      r0,[r1,#0]  ; netif_default
;;;440      LWIP_DEBUGF(NETIF_DEBUG, ("netif: setting default interface %c%c\n",
00015e  bf00              NOP      
000160  bf00              NOP      
;;;441               netif ? netif->name[0] : '\'', netif ? netif->name[1] : '\''));
;;;442    }
000162  4770              BX       lr
;;;443    
                          ENDP

                  netif_set_down PROC
;;;489     */ 
;;;490    void netif_set_down(struct netif *netif)
000164  b510              PUSH     {r4,lr}
;;;491    {
000166  4604              MOV      r4,r0
;;;492      if (netif->flags & NETIF_FLAG_UP) {
000168  f894002d          LDRB     r0,[r4,#0x2d]
00016c  f0000001          AND      r0,r0,#1
000170  b160              CBZ      r0,|L1.396|
;;;493        netif->flags &= ~NETIF_FLAG_UP;
000172  f8140f2d          LDRB     r0,[r4,#0x2d]!
000176  f0200001          BIC      r0,r0,#1
00017a  7020              STRB     r0,[r4,#0]
;;;494    #if LWIP_SNMP
;;;495        snmp_get_sysuptime(&netif->ts);
;;;496    #endif
;;;497    
;;;498    #if LWIP_ARP
;;;499        if (netif->flags & NETIF_FLAG_ETHARP) {
00017c  f814092d          LDRB     r0,[r4],#-0x2d
000180  f0000020          AND      r0,r0,#0x20
000184  b110              CBZ      r0,|L1.396|
;;;500          etharp_cleanup_netif(netif);
000186  4620              MOV      r0,r4
000188  f7fffffe          BL       etharp_cleanup_netif
                  |L1.396|
;;;501        }
;;;502    #endif /* LWIP_ARP */
;;;503        NETIF_STATUS_CALLBACK(netif);
;;;504      }
;;;505    }
00018c  bd10              POP      {r4,pc}
;;;506    
                          ENDP

                  netif_remove PROC
;;;234    void
;;;235    netif_remove(struct netif *netif)
00018e  b510              PUSH     {r4,lr}
;;;236    {
000190  4604              MOV      r4,r0
;;;237      if (netif == NULL) {
000192  b904              CBNZ     r4,|L1.406|
                  |L1.404|
;;;238        return;
;;;239      }
;;;240    
;;;241    #if LWIP_IGMP
;;;242      /* stop IGMP processing */
;;;243      if (netif->flags & NETIF_FLAG_IGMP) {
;;;244        igmp_stop(netif);
;;;245      }
;;;246    #endif /* LWIP_IGMP */
;;;247      if (netif_is_up(netif)) {
;;;248        /* set netif down before removing (call callback function) */
;;;249        netif_set_down(netif);
;;;250      }
;;;251    
;;;252      snmp_delete_ipaddridx_tree(netif);
;;;253    
;;;254      /*  is it the first netif? */
;;;255      if (netif_list == netif) {
;;;256        netif_list = netif->next;
;;;257      } else {
;;;258        /*  look for netif further down the list */
;;;259        struct netif * tmpNetif;
;;;260        for (tmpNetif = netif_list; tmpNetif != NULL; tmpNetif = tmpNetif->next) {
;;;261          if (tmpNetif->next == netif) {
;;;262            tmpNetif->next = netif->next;
;;;263            break;
;;;264          }
;;;265        }
;;;266        if (tmpNetif == NULL)
;;;267          return; /*  we didn't find any netif today */
;;;268      }
;;;269      snmp_dec_iflist();
;;;270      /* this netif is default? */
;;;271      if (netif_default == netif) {
;;;272        /* reset default netif */
;;;273        netif_set_default(NULL);
;;;274      }
;;;275    #if LWIP_NETIF_REMOVE_CALLBACK
;;;276      if (netif->remove_callback) {
;;;277        netif->remove_callback(netif);
;;;278      }
;;;279    #endif /* LWIP_NETIF_REMOVE_CALLBACK */
;;;280      LWIP_DEBUGF( NETIF_DEBUG, ("netif_remove: removed netif\n") );
;;;281    }
000194  bd10              POP      {r4,pc}
                  |L1.406|
000196  f894002d          LDRB     r0,[r4,#0x2d]         ;243
00019a  f0000080          AND      r0,r0,#0x80           ;243
00019e  b110              CBZ      r0,|L1.422|
0001a0  4620              MOV      r0,r4                 ;244
0001a2  f7fffffe          BL       igmp_stop
                  |L1.422|
0001a6  f894002d          LDRB     r0,[r4,#0x2d]         ;247
0001aa  f0000001          AND      r0,r0,#1              ;247
0001ae  b110              CBZ      r0,|L1.438|
0001b0  4620              MOV      r0,r4                 ;249
0001b2  f7fffffe          BL       netif_set_down
                  |L1.438|
0001b6  4852              LDR      r0,|L1.768|
0001b8  6800              LDR      r0,[r0,#0]            ;255  ; netif_list
0001ba  42a0              CMP      r0,r4                 ;255
0001bc  d103              BNE      |L1.454|
0001be  4950              LDR      r1,|L1.768|
0001c0  6820              LDR      r0,[r4,#0]            ;256
0001c2  6008              STR      r0,[r1,#0]            ;256  ; netif_list
0001c4  e00f              B        |L1.486|
                  |L1.454|
0001c6  494e              LDR      r1,|L1.768|
0001c8  6808              LDR      r0,[r1,#0]            ;260  ; netif_list
0001ca  e006              B        |L1.474|
                  |L1.460|
0001cc  6801              LDR      r1,[r0,#0]            ;261
0001ce  42a1              CMP      r1,r4                 ;261
0001d0  d102              BNE      |L1.472|
0001d2  6821              LDR      r1,[r4,#0]            ;262
0001d4  6001              STR      r1,[r0,#0]            ;262
0001d6  e002              B        |L1.478|
                  |L1.472|
0001d8  6800              LDR      r0,[r0,#0]            ;260
                  |L1.474|
0001da  2800              CMP      r0,#0                 ;260
0001dc  d1f6              BNE      |L1.460|
                  |L1.478|
0001de  bf00              NOP                            ;263
0001e0  b900              CBNZ     r0,|L1.484|
0001e2  e7d7              B        |L1.404|
                  |L1.484|
0001e4  bf00              NOP                            ;268
                  |L1.486|
0001e6  4847              LDR      r0,|L1.772|
0001e8  6800              LDR      r0,[r0,#0]            ;271  ; netif_default
0001ea  42a0              CMP      r0,r4                 ;271
0001ec  d102              BNE      |L1.500|
0001ee  2000              MOVS     r0,#0                 ;273
0001f0  f7fffffe          BL       netif_set_default
                  |L1.500|
0001f4  bf00              NOP                            ;280
0001f6  bf00              NOP                            ;280
0001f8  bf00              NOP      
0001fa  e7cb              B        |L1.404|
;;;282    
                          ENDP

                  netif_find PROC
;;;289    struct netif *
;;;290    netif_find(char *name)
0001fc  b510              PUSH     {r4,lr}
;;;291    {
0001fe  4602              MOV      r2,r0
;;;292      struct netif *netif;
;;;293      u8_t num;
;;;294    
;;;295      if (name == NULL) {
000200  b90a              CBNZ     r2,|L1.518|
;;;296        return NULL;
000202  2000              MOVS     r0,#0
                  |L1.516|
;;;297      }
;;;298    
;;;299      num = name[2] - '0';
;;;300    
;;;301      for(netif = netif_list; netif != NULL; netif = netif->next) {
;;;302        if (num == netif->num &&
;;;303           name[0] == netif->name[0] &&
;;;304           name[1] == netif->name[1]) {
;;;305          LWIP_DEBUGF(NETIF_DEBUG, ("netif_find: found %c%c\n", name[0], name[1]));
;;;306          return netif;
;;;307        }
;;;308      }
;;;309      LWIP_DEBUGF(NETIF_DEBUG, ("netif_find: didn't find %c%c\n", name[0], name[1]));
;;;310      return NULL;
;;;311    }
000204  bd10              POP      {r4,pc}
                  |L1.518|
000206  7890              LDRB     r0,[r2,#2]            ;299
000208  3830              SUBS     r0,r0,#0x30           ;299
00020a  b2c3              UXTB     r3,r0                 ;299
00020c  483c              LDR      r0,|L1.768|
00020e  6801              LDR      r1,[r0,#0]            ;301  ; netif_list
000210  e012              B        |L1.568|
                  |L1.530|
000212  f8910030          LDRB     r0,[r1,#0x30]         ;302
000216  4298              CMP      r0,r3                 ;302
000218  d10d              BNE      |L1.566|
00021a  7810              LDRB     r0,[r2,#0]            ;303
00021c  f891402e          LDRB     r4,[r1,#0x2e]         ;303
000220  42a0              CMP      r0,r4                 ;303
000222  d108              BNE      |L1.566|
000224  7854              LDRB     r4,[r2,#1]            ;304
000226  202f              MOVS     r0,#0x2f              ;304
000228  5c40              LDRB     r0,[r0,r1]            ;304
00022a  4284              CMP      r4,r0                 ;304
00022c  d103              BNE      |L1.566|
00022e  bf00              NOP                            ;305
000230  bf00              NOP                            ;305
000232  4608              MOV      r0,r1                 ;306
000234  e7e6              B        |L1.516|
                  |L1.566|
000236  6809              LDR      r1,[r1,#0]            ;301
                  |L1.568|
000238  2900              CMP      r1,#0                 ;301
00023a  d1ea              BNE      |L1.530|
00023c  bf00              NOP                            ;309
00023e  bf00              NOP                            ;309
000240  2000              MOVS     r0,#0                 ;310
000242  e7df              B        |L1.516|
;;;312    
                          ENDP

                  netif_set_up PROC
;;;452     */ 
;;;453    void netif_set_up(struct netif *netif)
000244  b510              PUSH     {r4,lr}
;;;454    {
000246  4604              MOV      r4,r0
;;;455      if (!(netif->flags & NETIF_FLAG_UP)) {
000248  f894002d          LDRB     r0,[r4,#0x2d]
00024c  f0000001          AND      r0,r0,#1
000250  b9d0              CBNZ     r0,|L1.648|
;;;456        netif->flags |= NETIF_FLAG_UP;
000252  f8140f2d          LDRB     r0,[r4,#0x2d]!
000256  f0400001          ORR      r0,r0,#1
00025a  7020              STRB     r0,[r4,#0]
;;;457        
;;;458    #if LWIP_SNMP
;;;459        snmp_get_sysuptime(&netif->ts);
;;;460    #endif /* LWIP_SNMP */
;;;461    
;;;462        NETIF_STATUS_CALLBACK(netif);
;;;463    
;;;464        if (netif->flags & NETIF_FLAG_LINK_UP) {
00025c  f814092d          LDRB     r0,[r4],#-0x2d
000260  f0000010          AND      r0,r0,#0x10
000264  b180              CBZ      r0,|L1.648|
;;;465    #if LWIP_ARP
;;;466          /* For Ethernet network interfaces, we would like to send a "gratuitous ARP" */ 
;;;467          if (netif->flags & (NETIF_FLAG_ETHARP)) {
000266  f894002d          LDRB     r0,[r4,#0x2d]
00026a  f0000020          AND      r0,r0,#0x20
00026e  b118              CBZ      r0,|L1.632|
;;;468            etharp_gratuitous(netif);
000270  1d21              ADDS     r1,r4,#4
000272  4620              MOV      r0,r4
000274  f7fffffe          BL       etharp_request
                  |L1.632|
;;;469          }
;;;470    #endif /* LWIP_ARP */
;;;471    
;;;472    #if LWIP_IGMP
;;;473          /* resend IGMP memberships */
;;;474          if (netif->flags & NETIF_FLAG_IGMP) {
000278  f894002d          LDRB     r0,[r4,#0x2d]
00027c  f0000080          AND      r0,r0,#0x80
000280  b110              CBZ      r0,|L1.648|
;;;475            igmp_report_groups( netif);
000282  4620              MOV      r0,r4
000284  f7fffffe          BL       igmp_report_groups
                  |L1.648|
;;;476          }
;;;477    #endif /* LWIP_IGMP */
;;;478        }
;;;479      }
;;;480    }
000288  bd10              POP      {r4,pc}
;;;481    
                          ENDP

                  netif_set_link_up PROC
;;;534     */
;;;535    void netif_set_link_up(struct netif *netif )
00028a  b510              PUSH     {r4,lr}
;;;536    {
00028c  4604              MOV      r4,r0
;;;537      if (!(netif->flags & NETIF_FLAG_LINK_UP)) {
00028e  f894002d          LDRB     r0,[r4,#0x2d]
000292  f0000010          AND      r0,r0,#0x10
000296  bb00              CBNZ     r0,|L1.730|
;;;538        netif->flags |= NETIF_FLAG_LINK_UP;
000298  f894002d          LDRB     r0,[r4,#0x2d]
00029c  f0400010          ORR      r0,r0,#0x10
0002a0  f884002d          STRB     r0,[r4,#0x2d]
;;;539    
;;;540    #if LWIP_DHCP
;;;541        if (netif->dhcp) {
0002a4  6a20              LDR      r0,[r4,#0x20]
0002a6  b110              CBZ      r0,|L1.686|
;;;542          dhcp_network_changed(netif);
0002a8  4620              MOV      r0,r4
0002aa  f7fffffe          BL       dhcp_network_changed
                  |L1.686|
;;;543        }
;;;544    #endif /* LWIP_DHCP */
;;;545    
;;;546    #if LWIP_AUTOIP
;;;547        if (netif->autoip) {
;;;548          autoip_network_changed(netif);
;;;549        }
;;;550    #endif /* LWIP_AUTOIP */
;;;551    
;;;552        if (netif->flags & NETIF_FLAG_UP) {
0002ae  f894002d          LDRB     r0,[r4,#0x2d]
0002b2  f0000001          AND      r0,r0,#1
0002b6  b180              CBZ      r0,|L1.730|
;;;553    #if LWIP_ARP
;;;554          /* For Ethernet network interfaces, we would like to send a "gratuitous ARP" */ 
;;;555          if (netif->flags & NETIF_FLAG_ETHARP) {
0002b8  f894002d          LDRB     r0,[r4,#0x2d]
0002bc  f0000020          AND      r0,r0,#0x20
0002c0  b118              CBZ      r0,|L1.714|
;;;556            etharp_gratuitous(netif);
0002c2  1d21              ADDS     r1,r4,#4
0002c4  4620              MOV      r0,r4
0002c6  f7fffffe          BL       etharp_request
                  |L1.714|
;;;557          }
;;;558    #endif /* LWIP_ARP */
;;;559    
;;;560    #if LWIP_IGMP
;;;561          /* resend IGMP memberships */
;;;562          if (netif->flags & NETIF_FLAG_IGMP) {
0002ca  f894002d          LDRB     r0,[r4,#0x2d]
0002ce  f0000080          AND      r0,r0,#0x80
0002d2  b110              CBZ      r0,|L1.730|
;;;563            igmp_report_groups( netif);
0002d4  4620              MOV      r0,r4
0002d6  f7fffffe          BL       igmp_report_groups
                  |L1.730|
;;;564          }
;;;565    #endif /* LWIP_IGMP */
;;;566        }
;;;567        NETIF_LINK_CALLBACK(netif);
;;;568      }
;;;569    }
0002da  bd10              POP      {r4,pc}
;;;570    
                          ENDP

                  netif_set_link_down PROC
;;;573     */
;;;574    void netif_set_link_down(struct netif *netif )
0002dc  f890102d          LDRB     r1,[r0,#0x2d]
;;;575    {
;;;576      if (netif->flags & NETIF_FLAG_LINK_UP) {
0002e0  f0010110          AND      r1,r1,#0x10
0002e4  b129              CBZ      r1,|L1.754|
;;;577        netif->flags &= ~NETIF_FLAG_LINK_UP;
0002e6  f890102d          LDRB     r1,[r0,#0x2d]
0002ea  f0210110          BIC      r1,r1,#0x10
0002ee  f880102d          STRB     r1,[r0,#0x2d]
                  |L1.754|
;;;578        NETIF_LINK_CALLBACK(netif);
;;;579      }
;;;580    }
0002f2  4770              BX       lr
;;;581    
                          ENDP

                  |L1.756|
                          DCD      tcp_active_pcbs
                  |L1.760|
                          DCD      tcp_listen_pcbs
                  |L1.764|
                          DCD      netif_num
                  |L1.768|
                          DCD      netif_list
                  |L1.772|
                          DCD      netif_default

                          AREA ||.data||, DATA, ALIGN=2

                  netif_list
                          DCD      0x00000000
                  netif_default
                          DCD      0x00000000
                  netif_num
000008  00                DCB      0x00
