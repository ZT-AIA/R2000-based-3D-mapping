; generated by Component: ARM Compiler 5.06 update 2 (build 183) Tool: ArmCC [4d35cd]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\discovery\stm32f4xx_exti.o --asm_dir=.\Discovery\ --list_dir=.\Discovery\ --depend=.\discovery\stm32f4xx_exti.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\inc -I..\src -I..\..\libraries\CMSIS\Include -I..\..\libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\libraries\STM32F4x7_ETH_Driver\inc -I..\..\libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\libraries\STM32F4-Discovery -I..\..\libraries\lwip-1.4.1\port\STM32F4x7 -I..\..\libraries\lwip-1.4.1\src\include -I..\..\libraries\lwip-1.4.1\src\include\ipv4 -I..\..\libraries\lwip-1.4.1\src\include\lwip -I..\..\libraries\lwip-1.4.1\src\include\netif -I..\..\libraries\lwip-1.4.1\port\STM32F4x7\arch -I..\..\libraries\rtx-v4.73\INC -I..\..\libraries\rtx-v4.73\SRC -I..\..\libraries\ptpd-2.0.0\src -I..\inc\system -I..\inc\laser -I..\inc\motorCtrl -I..\..\libraries\lwip-1.4.1\src\include\ipv4\lwip -Id:\Keil_v5\ARM\RV31\INC -Id:\Keil_v5\ARM\CMSIS\Include -Id:\Keil_v5\ARM\Inc\ST\STM32F4xx -D__MICROLIB -D__UVISION_VERSION=520 -DSTM32F40_41xxx -DUSE_STDPERIPH_DRIVER -D__CORTEX_M4F -D__FPU_PRESENT -D__CMSIS_RTOS -DSTM32F40_41xxx --omf_browse=.\discovery\stm32f4xx_exti.crf ..\..\libraries\STM32F4xx_StdPeriph_Driver\src\stm32f4xx_exti.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  EXTI_DeInit PROC
;;;108      */
;;;109    void EXTI_DeInit(void)
000000  2000              MOVS     r0,#0
;;;110    {
;;;111      EXTI->IMR = 0x00000000;
000002  4944              LDR      r1,|L1.276|
000004  6008              STR      r0,[r1,#0]
;;;112      EXTI->EMR = 0x00000000;
000006  1d09              ADDS     r1,r1,#4
000008  6008              STR      r0,[r1,#0]
;;;113      EXTI->RTSR = 0x00000000;
00000a  1d09              ADDS     r1,r1,#4
00000c  6008              STR      r0,[r1,#0]
;;;114      EXTI->FTSR = 0x00000000;
00000e  1d09              ADDS     r1,r1,#4
000010  6008              STR      r0,[r1,#0]
;;;115      EXTI->PR = 0x007FFFFF;
000012  4841              LDR      r0,|L1.280|
000014  493f              LDR      r1,|L1.276|
000016  3114              ADDS     r1,r1,#0x14
000018  6008              STR      r0,[r1,#0]
;;;116    }
00001a  4770              BX       lr
;;;117    
                          ENDP

                  EXTI_Init PROC
;;;124      */
;;;125    void EXTI_Init(EXTI_InitTypeDef* EXTI_InitStruct)
00001c  2100              MOVS     r1,#0
;;;126    {
;;;127      uint32_t tmp = 0;
;;;128    
;;;129      /* Check the parameters */
;;;130      assert_param(IS_EXTI_MODE(EXTI_InitStruct->EXTI_Mode));
;;;131      assert_param(IS_EXTI_TRIGGER(EXTI_InitStruct->EXTI_Trigger));
;;;132      assert_param(IS_EXTI_LINE(EXTI_InitStruct->EXTI_Line));  
;;;133      assert_param(IS_FUNCTIONAL_STATE(EXTI_InitStruct->EXTI_LineCmd));
;;;134    
;;;135      tmp = (uint32_t)EXTI_BASE;
00001e  493d              LDR      r1,|L1.276|
;;;136         
;;;137      if (EXTI_InitStruct->EXTI_LineCmd != DISABLE)
000020  7982              LDRB     r2,[r0,#6]
000022  2a00              CMP      r2,#0
000024  d03a              BEQ      |L1.156|
;;;138      {
;;;139        /* Clear EXTI line configuration */
;;;140        EXTI->IMR &= ~EXTI_InitStruct->EXTI_Line;
000026  460a              MOV      r2,r1
000028  6812              LDR      r2,[r2,#0]
00002a  6803              LDR      r3,[r0,#0]
00002c  439a              BICS     r2,r2,r3
00002e  460b              MOV      r3,r1
000030  601a              STR      r2,[r3,#0]
;;;141        EXTI->EMR &= ~EXTI_InitStruct->EXTI_Line;
000032  1d0a              ADDS     r2,r1,#4
000034  6812              LDR      r2,[r2,#0]
000036  6803              LDR      r3,[r0,#0]
000038  439a              BICS     r2,r2,r3
00003a  1d0b              ADDS     r3,r1,#4
00003c  601a              STR      r2,[r3,#0]
;;;142        
;;;143        tmp += EXTI_InitStruct->EXTI_Mode;
00003e  7902              LDRB     r2,[r0,#4]
000040  4411              ADD      r1,r1,r2
;;;144    
;;;145        *(__IO uint32_t *) tmp |= EXTI_InitStruct->EXTI_Line;
000042  680a              LDR      r2,[r1,#0]
000044  6803              LDR      r3,[r0,#0]
000046  431a              ORRS     r2,r2,r3
000048  600a              STR      r2,[r1,#0]
;;;146    
;;;147        /* Clear Rising Falling edge configuration */
;;;148        EXTI->RTSR &= ~EXTI_InitStruct->EXTI_Line;
00004a  4a32              LDR      r2,|L1.276|
00004c  3208              ADDS     r2,r2,#8
00004e  6812              LDR      r2,[r2,#0]
000050  6803              LDR      r3,[r0,#0]
000052  439a              BICS     r2,r2,r3
000054  4b2f              LDR      r3,|L1.276|
000056  3308              ADDS     r3,r3,#8
000058  601a              STR      r2,[r3,#0]
;;;149        EXTI->FTSR &= ~EXTI_InitStruct->EXTI_Line;
00005a  1d1a              ADDS     r2,r3,#4
00005c  6812              LDR      r2,[r2,#0]
00005e  6803              LDR      r3,[r0,#0]
000060  439a              BICS     r2,r2,r3
000062  4b2c              LDR      r3,|L1.276|
000064  330c              ADDS     r3,r3,#0xc
000066  601a              STR      r2,[r3,#0]
;;;150        
;;;151        /* Select the trigger for the selected external interrupts */
;;;152        if (EXTI_InitStruct->EXTI_Trigger == EXTI_Trigger_Rising_Falling)
000068  7942              LDRB     r2,[r0,#5]
00006a  2a10              CMP      r2,#0x10
00006c  d10e              BNE      |L1.140|
;;;153        {
;;;154          /* Rising Falling edge */
;;;155          EXTI->RTSR |= EXTI_InitStruct->EXTI_Line;
00006e  1f1a              SUBS     r2,r3,#4
000070  6812              LDR      r2,[r2,#0]
000072  6803              LDR      r3,[r0,#0]
000074  431a              ORRS     r2,r2,r3
000076  4b27              LDR      r3,|L1.276|
000078  3308              ADDS     r3,r3,#8
00007a  601a              STR      r2,[r3,#0]
;;;156          EXTI->FTSR |= EXTI_InitStruct->EXTI_Line;
00007c  1d1a              ADDS     r2,r3,#4
00007e  6812              LDR      r2,[r2,#0]
000080  6803              LDR      r3,[r0,#0]
000082  431a              ORRS     r2,r2,r3
000084  4b23              LDR      r3,|L1.276|
000086  330c              ADDS     r3,r3,#0xc
000088  601a              STR      r2,[r3,#0]
00008a  e00d              B        |L1.168|
                  |L1.140|
;;;157        }
;;;158        else
;;;159        {
;;;160          tmp = (uint32_t)EXTI_BASE;
00008c  4921              LDR      r1,|L1.276|
;;;161          tmp += EXTI_InitStruct->EXTI_Trigger;
00008e  7942              LDRB     r2,[r0,#5]
000090  4411              ADD      r1,r1,r2
;;;162    
;;;163          *(__IO uint32_t *) tmp |= EXTI_InitStruct->EXTI_Line;
000092  680a              LDR      r2,[r1,#0]
000094  6803              LDR      r3,[r0,#0]
000096  431a              ORRS     r2,r2,r3
000098  600a              STR      r2,[r1,#0]
00009a  e005              B        |L1.168|
                  |L1.156|
;;;164        }
;;;165      }
;;;166      else
;;;167      {
;;;168        tmp += EXTI_InitStruct->EXTI_Mode;
00009c  7902              LDRB     r2,[r0,#4]
00009e  4411              ADD      r1,r1,r2
;;;169    
;;;170        /* Disable the selected external lines */
;;;171        *(__IO uint32_t *) tmp &= ~EXTI_InitStruct->EXTI_Line;
0000a0  680a              LDR      r2,[r1,#0]
0000a2  6803              LDR      r3,[r0,#0]
0000a4  439a              BICS     r2,r2,r3
0000a6  600a              STR      r2,[r1,#0]
                  |L1.168|
;;;172      }
;;;173    }
0000a8  4770              BX       lr
;;;174    
                          ENDP

                  EXTI_StructInit PROC
;;;180      */
;;;181    void EXTI_StructInit(EXTI_InitTypeDef* EXTI_InitStruct)
0000aa  2100              MOVS     r1,#0
;;;182    {
;;;183      EXTI_InitStruct->EXTI_Line = EXTI_LINENONE;
0000ac  6001              STR      r1,[r0,#0]
;;;184      EXTI_InitStruct->EXTI_Mode = EXTI_Mode_Interrupt;
0000ae  7101              STRB     r1,[r0,#4]
;;;185      EXTI_InitStruct->EXTI_Trigger = EXTI_Trigger_Falling;
0000b0  210c              MOVS     r1,#0xc
0000b2  7141              STRB     r1,[r0,#5]
;;;186      EXTI_InitStruct->EXTI_LineCmd = DISABLE;
0000b4  2100              MOVS     r1,#0
0000b6  7181              STRB     r1,[r0,#6]
;;;187    }
0000b8  4770              BX       lr
;;;188    
                          ENDP

                  EXTI_GenerateSWInterrupt PROC
;;;195      */
;;;196    void EXTI_GenerateSWInterrupt(uint32_t EXTI_Line)
0000ba  4916              LDR      r1,|L1.276|
;;;197    {
;;;198      /* Check the parameters */
;;;199      assert_param(IS_EXTI_LINE(EXTI_Line));
;;;200      
;;;201      EXTI->SWIER |= EXTI_Line;
0000bc  3110              ADDS     r1,r1,#0x10
0000be  6809              LDR      r1,[r1,#0]
0000c0  4301              ORRS     r1,r1,r0
0000c2  4a14              LDR      r2,|L1.276|
0000c4  3210              ADDS     r2,r2,#0x10
0000c6  6011              STR      r1,[r2,#0]
;;;202    }
0000c8  4770              BX       lr
;;;203    
                          ENDP

                  EXTI_GetFlagStatus PROC
;;;225      */
;;;226    FlagStatus EXTI_GetFlagStatus(uint32_t EXTI_Line)
0000ca  4601              MOV      r1,r0
;;;227    {
;;;228      FlagStatus bitstatus = RESET;
0000cc  2000              MOVS     r0,#0
;;;229      /* Check the parameters */
;;;230      assert_param(IS_GET_EXTI_LINE(EXTI_Line));
;;;231      
;;;232      if ((EXTI->PR & EXTI_Line) != (uint32_t)RESET)
0000ce  4a11              LDR      r2,|L1.276|
0000d0  3214              ADDS     r2,r2,#0x14
0000d2  6812              LDR      r2,[r2,#0]
0000d4  400a              ANDS     r2,r2,r1
0000d6  b10a              CBZ      r2,|L1.220|
;;;233      {
;;;234        bitstatus = SET;
0000d8  2001              MOVS     r0,#1
0000da  e000              B        |L1.222|
                  |L1.220|
;;;235      }
;;;236      else
;;;237      {
;;;238        bitstatus = RESET;
0000dc  2000              MOVS     r0,#0
                  |L1.222|
;;;239      }
;;;240      return bitstatus;
;;;241    }
0000de  4770              BX       lr
;;;242    
                          ENDP

                  EXTI_ClearFlag PROC
;;;248      */
;;;249    void EXTI_ClearFlag(uint32_t EXTI_Line)
0000e0  490c              LDR      r1,|L1.276|
;;;250    {
;;;251      /* Check the parameters */
;;;252      assert_param(IS_EXTI_LINE(EXTI_Line));
;;;253      
;;;254      EXTI->PR = EXTI_Line;
0000e2  3114              ADDS     r1,r1,#0x14
0000e4  6008              STR      r0,[r1,#0]
;;;255    }
0000e6  4770              BX       lr
;;;256    
                          ENDP

                  EXTI_GetITStatus PROC
;;;262      */
;;;263    ITStatus EXTI_GetITStatus(uint32_t EXTI_Line)
0000e8  4601              MOV      r1,r0
;;;264    {
;;;265      ITStatus bitstatus = RESET;
0000ea  2000              MOVS     r0,#0
;;;266      uint32_t enablestatus = 0;
0000ec  2200              MOVS     r2,#0
;;;267      /* Check the parameters */
;;;268      assert_param(IS_GET_EXTI_LINE(EXTI_Line));
;;;269      
;;;270      enablestatus =  EXTI->IMR & EXTI_Line;
0000ee  4b09              LDR      r3,|L1.276|
0000f0  681b              LDR      r3,[r3,#0]
0000f2  ea030201          AND      r2,r3,r1
;;;271      if (((EXTI->PR & EXTI_Line) != (uint32_t)RESET) && (enablestatus != (uint32_t)RESET))
0000f6  4b07              LDR      r3,|L1.276|
0000f8  3314              ADDS     r3,r3,#0x14
0000fa  681b              LDR      r3,[r3,#0]
0000fc  400b              ANDS     r3,r3,r1
0000fe  b113              CBZ      r3,|L1.262|
000100  b10a              CBZ      r2,|L1.262|
;;;272      {
;;;273        bitstatus = SET;
000102  2001              MOVS     r0,#1
000104  e000              B        |L1.264|
                  |L1.262|
;;;274      }
;;;275      else
;;;276      {
;;;277        bitstatus = RESET;
000106  2000              MOVS     r0,#0
                  |L1.264|
;;;278      }
;;;279      return bitstatus;
;;;280    }
000108  4770              BX       lr
;;;281    
                          ENDP

                  EXTI_ClearITPendingBit PROC
;;;287      */
;;;288    void EXTI_ClearITPendingBit(uint32_t EXTI_Line)
00010a  4902              LDR      r1,|L1.276|
;;;289    {
;;;290      /* Check the parameters */
;;;291      assert_param(IS_EXTI_LINE(EXTI_Line));
;;;292      
;;;293      EXTI->PR = EXTI_Line;
00010c  3114              ADDS     r1,r1,#0x14
00010e  6008              STR      r0,[r1,#0]
;;;294    }
000110  4770              BX       lr
;;;295    
                          ENDP

000112  0000              DCW      0x0000
                  |L1.276|
                          DCD      0x40013c00
                  |L1.280|
                          DCD      0x007fffff

;*** Start embedded assembler ***

#line 1 "..\\..\\libraries\\STM32F4xx_StdPeriph_Driver\\src\\stm32f4xx_exti.c"
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__asm___16_stm32f4xx_exti_c_28b3b60e____REV16|
#line 114 "..\\..\\libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___16_stm32f4xx_exti_c_28b3b60e____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__asm___16_stm32f4xx_exti_c_28b3b60e____REVSH|
#line 128
|__asm___16_stm32f4xx_exti_c_28b3b60e____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
