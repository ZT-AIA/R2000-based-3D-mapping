; generated by Component: ARM Compiler 5.06 update 2 (build 183) Tool: ArmCC [4d35cd]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\discovery\netbuf.o --asm_dir=.\Discovery\ --list_dir=.\Discovery\ --depend=.\discovery\netbuf.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\inc -I..\src -I..\..\libraries\CMSIS\Include -I..\..\libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\libraries\STM32F4x7_ETH_Driver\inc -I..\..\libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\libraries\STM32F4-Discovery -I..\..\libraries\lwip-1.4.1\port\STM32F4x7 -I..\..\libraries\lwip-1.4.1\src\include -I..\..\libraries\lwip-1.4.1\src\include\ipv4 -I..\..\libraries\lwip-1.4.1\src\include\lwip -I..\..\libraries\lwip-1.4.1\src\include\netif -I..\..\libraries\lwip-1.4.1\port\STM32F4x7\arch -I..\..\libraries\rtx-v4.73\INC -I..\..\libraries\rtx-v4.73\SRC -I..\..\libraries\ptpd-2.0.0\src -I..\inc\system -I..\inc\laser -I..\inc\motorCtrl -I..\..\libraries\lwip-1.4.1\src\include\ipv4\lwip -Id:\Keil_v5\ARM\RV31\INC -Id:\Keil_v5\ARM\CMSIS\Include -Id:\Keil_v5\ARM\Inc\ST\STM32F4xx -D__MICROLIB -D__UVISION_VERSION=520 -DSTM32F40_41xxx -DUSE_STDPERIPH_DRIVER -D__CORTEX_M4F -D__FPU_PRESENT -D__CMSIS_RTOS -DSTM32F40_41xxx --omf_browse=.\discovery\netbuf.crf ..\..\libraries\lwip-1.4.1\src\api\netbuf.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  netbuf_new PROC
;;;55     struct
;;;56     netbuf *netbuf_new(void)
000000  b510              PUSH     {r4,lr}
;;;57     {
;;;58       struct netbuf *buf;
;;;59     
;;;60       buf = (struct netbuf *)memp_malloc(MEMP_NETBUF);
000002  2005              MOVS     r0,#5
000004  f7fffffe          BL       memp_malloc
000008  4604              MOV      r4,r0
;;;61       if (buf != NULL) {
00000a  b134              CBZ      r4,|L1.26|
;;;62         buf->p = NULL;
00000c  2000              MOVS     r0,#0
00000e  6020              STR      r0,[r4,#0]
;;;63         buf->ptr = NULL;
000010  6060              STR      r0,[r4,#4]
;;;64         ip_addr_set_any(&buf->addr);
000012  60a0              STR      r0,[r4,#8]
;;;65         buf->port = 0;
000014  81a0              STRH     r0,[r4,#0xc]
;;;66     #if LWIP_NETBUF_RECVINFO || LWIP_CHECKSUM_ON_COPY
;;;67     #if LWIP_CHECKSUM_ON_COPY
;;;68         buf->flags = 0;
;;;69     #endif /* LWIP_CHECKSUM_ON_COPY */
;;;70         buf->toport_chksum = 0;
;;;71     #if LWIP_NETBUF_RECVINFO
;;;72         ip_addr_set_any(&buf->toaddr);
;;;73     #endif /* LWIP_NETBUF_RECVINFO */
;;;74     #endif /* LWIP_NETBUF_RECVINFO || LWIP_CHECKSUM_ON_COPY */
;;;75         return buf;
000016  4620              MOV      r0,r4
                  |L1.24|
;;;76       } else {
;;;77         return NULL;
;;;78       }
;;;79     }
000018  bd10              POP      {r4,pc}
                  |L1.26|
00001a  2000              MOVS     r0,#0                 ;77
00001c  e7fc              B        |L1.24|
;;;80     
                          ENDP

                  netbuf_delete PROC
;;;86     void
;;;87     netbuf_delete(struct netbuf *buf)
00001e  b510              PUSH     {r4,lr}
;;;88     {
000020  4604              MOV      r4,r0
;;;89       if (buf != NULL) {
000022  b15c              CBZ      r4,|L1.60|
;;;90         if (buf->p != NULL) {
000024  6820              LDR      r0,[r4,#0]
000026  b128              CBZ      r0,|L1.52|
;;;91           pbuf_free(buf->p);
000028  6820              LDR      r0,[r4,#0]
00002a  f7fffffe          BL       pbuf_free
;;;92           buf->p = buf->ptr = NULL;
00002e  2000              MOVS     r0,#0
000030  6060              STR      r0,[r4,#4]
000032  6020              STR      r0,[r4,#0]
                  |L1.52|
;;;93         }
;;;94         memp_free(MEMP_NETBUF, buf);
000034  4621              MOV      r1,r4
000036  2005              MOVS     r0,#5
000038  f7fffffe          BL       memp_free
                  |L1.60|
;;;95       }
;;;96     }
00003c  bd10              POP      {r4,pc}
;;;97     
                          ENDP

                  netbuf_alloc PROC
;;;106    void *
;;;107    netbuf_alloc(struct netbuf *buf, u16_t size)
00003e  b570              PUSH     {r4-r6,lr}
;;;108    {
000040  4604              MOV      r4,r0
000042  460d              MOV      r5,r1
;;;109      LWIP_ERROR("netbuf_alloc: invalid buf", (buf != NULL), return NULL;);
000044  bf00              NOP      
000046  b90c              CBNZ     r4,|L1.76|
000048  2000              MOVS     r0,#0
                  |L1.74|
;;;110    
;;;111      /* Deallocate any previously allocated memory. */
;;;112      if (buf->p != NULL) {
;;;113        pbuf_free(buf->p);
;;;114      }
;;;115      buf->p = pbuf_alloc(PBUF_TRANSPORT, size, PBUF_RAM);
;;;116      if (buf->p == NULL) {
;;;117         return NULL;
;;;118      }
;;;119      LWIP_ASSERT("check that first pbuf can hold size",
;;;120                 (buf->p->len >= size));
;;;121      buf->ptr = buf->p;
;;;122      return buf->p->payload;
;;;123    }
00004a  bd70              POP      {r4-r6,pc}
                  |L1.76|
00004c  bf00              NOP                            ;109
00004e  6820              LDR      r0,[r4,#0]            ;112
000050  b110              CBZ      r0,|L1.88|
000052  6820              LDR      r0,[r4,#0]            ;113
000054  f7fffffe          BL       pbuf_free
                  |L1.88|
000058  2200              MOVS     r2,#0                 ;115
00005a  4629              MOV      r1,r5                 ;115
00005c  4610              MOV      r0,r2                 ;115
00005e  f7fffffe          BL       pbuf_alloc
000062  6020              STR      r0,[r4,#0]            ;115
000064  6820              LDR      r0,[r4,#0]            ;116
000066  b908              CBNZ     r0,|L1.108|
000068  2000              MOVS     r0,#0                 ;117
00006a  e7ee              B        |L1.74|
                  |L1.108|
00006c  bf00              NOP                            ;119
00006e  bf00              NOP                            ;119
000070  6820              LDR      r0,[r4,#0]            ;121
000072  6060              STR      r0,[r4,#4]            ;121
000074  6820              LDR      r0,[r4,#0]            ;122
000076  6840              LDR      r0,[r0,#4]            ;122
000078  e7e7              B        |L1.74|
;;;124    
                          ENDP

                  netbuf_free PROC
;;;130    void
;;;131    netbuf_free(struct netbuf *buf)
00007a  b510              PUSH     {r4,lr}
;;;132    {
00007c  4604              MOV      r4,r0
;;;133      LWIP_ERROR("netbuf_free: invalid buf", (buf != NULL), return;);
00007e  bf00              NOP      
000080  b904              CBNZ     r4,|L1.132|
                  |L1.130|
;;;134      if (buf->p != NULL) {
;;;135        pbuf_free(buf->p);
;;;136      }
;;;137      buf->p = buf->ptr = NULL;
;;;138    }
000082  bd10              POP      {r4,pc}
                  |L1.132|
000084  bf00              NOP                            ;133
000086  6820              LDR      r0,[r4,#0]            ;134
000088  b110              CBZ      r0,|L1.144|
00008a  6820              LDR      r0,[r4,#0]            ;135
00008c  f7fffffe          BL       pbuf_free
                  |L1.144|
000090  2000              MOVS     r0,#0                 ;137
000092  6060              STR      r0,[r4,#4]            ;137
000094  6020              STR      r0,[r4,#0]            ;137
000096  bf00              NOP      
000098  e7f3              B        |L1.130|
;;;139    
                          ENDP

                  netbuf_ref PROC
;;;149    err_t
;;;150    netbuf_ref(struct netbuf *buf, const void *dataptr, u16_t size)
00009a  b570              PUSH     {r4-r6,lr}
;;;151    {
00009c  4604              MOV      r4,r0
00009e  460d              MOV      r5,r1
0000a0  4616              MOV      r6,r2
;;;152      LWIP_ERROR("netbuf_ref: invalid buf", (buf != NULL), return ERR_ARG;);
0000a2  bf00              NOP      
0000a4  b914              CBNZ     r4,|L1.172|
0000a6  f06f000d          MVN      r0,#0xd
                  |L1.170|
;;;153      if (buf->p != NULL) {
;;;154        pbuf_free(buf->p);
;;;155      }
;;;156      buf->p = pbuf_alloc(PBUF_TRANSPORT, 0, PBUF_REF);
;;;157      if (buf->p == NULL) {
;;;158        buf->ptr = NULL;
;;;159        return ERR_MEM;
;;;160      }
;;;161      buf->p->payload = (void*)dataptr;
;;;162      buf->p->len = buf->p->tot_len = size;
;;;163      buf->ptr = buf->p;
;;;164      return ERR_OK;
;;;165    }
0000aa  bd70              POP      {r4-r6,pc}
                  |L1.172|
0000ac  bf00              NOP                            ;152
0000ae  6820              LDR      r0,[r4,#0]            ;153
0000b0  b110              CBZ      r0,|L1.184|
0000b2  6820              LDR      r0,[r4,#0]            ;154
0000b4  f7fffffe          BL       pbuf_free
                  |L1.184|
0000b8  2202              MOVS     r2,#2                 ;156
0000ba  2100              MOVS     r1,#0                 ;156
0000bc  4608              MOV      r0,r1                 ;156
0000be  f7fffffe          BL       pbuf_alloc
0000c2  6020              STR      r0,[r4,#0]            ;156
0000c4  6820              LDR      r0,[r4,#0]            ;157
0000c6  b918              CBNZ     r0,|L1.208|
0000c8  2000              MOVS     r0,#0                 ;158
0000ca  6060              STR      r0,[r4,#4]            ;158
0000cc  1e40              SUBS     r0,r0,#1              ;159
0000ce  e7ec              B        |L1.170|
                  |L1.208|
0000d0  6820              LDR      r0,[r4,#0]            ;161
0000d2  6045              STR      r5,[r0,#4]            ;161
0000d4  6820              LDR      r0,[r4,#0]            ;162
0000d6  8106              STRH     r6,[r0,#8]            ;162
0000d8  6820              LDR      r0,[r4,#0]            ;162
0000da  8146              STRH     r6,[r0,#0xa]          ;162
0000dc  6820              LDR      r0,[r4,#0]            ;163
0000de  6060              STR      r0,[r4,#4]            ;163
0000e0  2000              MOVS     r0,#0                 ;164
0000e2  e7e2              B        |L1.170|
;;;166    
                          ENDP

                  netbuf_chain PROC
;;;173    void
;;;174    netbuf_chain(struct netbuf *head, struct netbuf *tail)
0000e4  b570              PUSH     {r4-r6,lr}
;;;175    {
0000e6  4604              MOV      r4,r0
0000e8  460d              MOV      r5,r1
;;;176      LWIP_ERROR("netbuf_ref: invalid head", (head != NULL), return;);
0000ea  bf00              NOP      
0000ec  b904              CBNZ     r4,|L1.240|
                  |L1.238|
;;;177      LWIP_ERROR("netbuf_chain: invalid tail", (tail != NULL), return;);
;;;178      pbuf_cat(head->p, tail->p);
;;;179      head->ptr = head->p;
;;;180      memp_free(MEMP_NETBUF, tail);
;;;181    }
0000ee  bd70              POP      {r4-r6,pc}
                  |L1.240|
0000f0  bf00              NOP                            ;176
0000f2  bf00              NOP                            ;177
0000f4  b905              CBNZ     r5,|L1.248|
0000f6  e7fa              B        |L1.238|
                  |L1.248|
0000f8  bf00              NOP                            ;177
0000fa  6829              LDR      r1,[r5,#0]            ;178
0000fc  6820              LDR      r0,[r4,#0]            ;178
0000fe  f7fffffe          BL       pbuf_cat
000102  6820              LDR      r0,[r4,#0]            ;179
000104  6060              STR      r0,[r4,#4]            ;179
000106  4629              MOV      r1,r5                 ;180
000108  2005              MOVS     r0,#5                 ;180
00010a  f7fffffe          BL       memp_free
00010e  bf00              NOP      
000110  e7ed              B        |L1.238|
;;;182    
                          ENDP

                  netbuf_data PROC
;;;192    err_t
;;;193    netbuf_data(struct netbuf *buf, void **dataptr, u16_t *len)
000112  4603              MOV      r3,r0
;;;194    {
;;;195      LWIP_ERROR("netbuf_data: invalid buf", (buf != NULL), return ERR_ARG;);
000114  bf00              NOP      
000116  b913              CBNZ     r3,|L1.286|
000118  f06f000d          MVN      r0,#0xd
                  |L1.284|
;;;196      LWIP_ERROR("netbuf_data: invalid dataptr", (dataptr != NULL), return ERR_ARG;);
;;;197      LWIP_ERROR("netbuf_data: invalid len", (len != NULL), return ERR_ARG;);
;;;198    
;;;199      if (buf->ptr == NULL) {
;;;200        return ERR_BUF;
;;;201      }
;;;202      *dataptr = buf->ptr->payload;
;;;203      *len = buf->ptr->len;
;;;204      return ERR_OK;
;;;205    }
00011c  4770              BX       lr
                  |L1.286|
00011e  bf00              NOP                            ;195
000120  bf00              NOP                            ;196
000122  b911              CBNZ     r1,|L1.298|
000124  f06f000d          MVN      r0,#0xd               ;196
000128  e7f8              B        |L1.284|
                  |L1.298|
00012a  bf00              NOP                            ;196
00012c  bf00              NOP                            ;197
00012e  b912              CBNZ     r2,|L1.310|
000130  f06f000d          MVN      r0,#0xd               ;197
000134  e7f2              B        |L1.284|
                  |L1.310|
000136  bf00              NOP                            ;197
000138  6858              LDR      r0,[r3,#4]            ;199
00013a  b910              CBNZ     r0,|L1.322|
00013c  f06f0001          MVN      r0,#1                 ;200
000140  e7ec              B        |L1.284|
                  |L1.322|
000142  6858              LDR      r0,[r3,#4]            ;202
000144  6840              LDR      r0,[r0,#4]            ;202
000146  6008              STR      r0,[r1,#0]            ;202
000148  6858              LDR      r0,[r3,#4]            ;203
00014a  8940              LDRH     r0,[r0,#0xa]          ;203
00014c  8010              STRH     r0,[r2,#0]            ;203
00014e  2000              MOVS     r0,#0                 ;204
000150  e7e4              B        |L1.284|
;;;206    
                          ENDP

                  netbuf_next PROC
;;;217    s8_t
;;;218    netbuf_next(struct netbuf *buf)
000152  4601              MOV      r1,r0
;;;219    {
;;;220      LWIP_ERROR("netbuf_free: invalid buf", (buf != NULL), return -1;);
000154  bf00              NOP      
000156  b911              CBNZ     r1,|L1.350|
000158  f04f30ff          MOV      r0,#0xffffffff
                  |L1.348|
;;;221      if (buf->ptr->next == NULL) {
;;;222        return -1;
;;;223      }
;;;224      buf->ptr = buf->ptr->next;
;;;225      if (buf->ptr->next == NULL) {
;;;226        return 1;
;;;227      }
;;;228      return 0;
;;;229    }
00015c  4770              BX       lr
                  |L1.350|
00015e  bf00              NOP                            ;220
000160  6848              LDR      r0,[r1,#4]            ;221
000162  6800              LDR      r0,[r0,#0]            ;221
000164  b910              CBNZ     r0,|L1.364|
000166  f04f30ff          MOV      r0,#0xffffffff        ;222
00016a  e7f7              B        |L1.348|
                  |L1.364|
00016c  6848              LDR      r0,[r1,#4]            ;224
00016e  6800              LDR      r0,[r0,#0]            ;224
000170  6048              STR      r0,[r1,#4]            ;224
000172  6848              LDR      r0,[r1,#4]            ;225
000174  6800              LDR      r0,[r0,#0]            ;225
000176  b908              CBNZ     r0,|L1.380|
000178  2001              MOVS     r0,#1                 ;226
00017a  e7ef              B        |L1.348|
                  |L1.380|
00017c  2000              MOVS     r0,#0                 ;228
00017e  e7ed              B        |L1.348|
;;;230    
                          ENDP

                  netbuf_first PROC
;;;238    void
;;;239    netbuf_first(struct netbuf *buf)
000180  bf00              NOP      
;;;240    {
;;;241      LWIP_ERROR("netbuf_free: invalid buf", (buf != NULL), return;);
000182  b900              CBNZ     r0,|L1.390|
                  |L1.388|
;;;242      buf->ptr = buf->p;
;;;243    }
000184  4770              BX       lr
                  |L1.390|
000186  bf00              NOP                            ;241
000188  6801              LDR      r1,[r0,#0]            ;242
00018a  6041              STR      r1,[r0,#4]            ;242
00018c  bf00              NOP      
00018e  e7f9              B        |L1.388|
;;;244    
                          ENDP

