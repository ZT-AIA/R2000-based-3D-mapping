; generated by Component: ARM Compiler 5.06 update 2 (build 183) Tool: ArmCC [4d35cd]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\discovery\def.o --asm_dir=.\Discovery\ --list_dir=.\Discovery\ --depend=.\discovery\def.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\inc -I..\src -I..\..\libraries\CMSIS\Include -I..\..\libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\libraries\STM32F4x7_ETH_Driver\inc -I..\..\libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\libraries\STM32F4-Discovery -I..\..\libraries\lwip-1.4.1\port\STM32F4x7 -I..\..\libraries\lwip-1.4.1\src\include -I..\..\libraries\lwip-1.4.1\src\include\ipv4 -I..\..\libraries\lwip-1.4.1\src\include\lwip -I..\..\libraries\lwip-1.4.1\src\include\netif -I..\..\libraries\lwip-1.4.1\port\STM32F4x7\arch -I..\..\libraries\rtx-v4.73\INC -I..\..\libraries\rtx-v4.73\SRC -I..\..\libraries\ptpd-2.0.0\src -I..\inc\system -I..\inc\laser -I..\inc\motorCtrl -I..\..\libraries\lwip-1.4.1\src\include\ipv4\lwip -Id:\Keil_v5\ARM\RV31\INC -Id:\Keil_v5\ARM\CMSIS\Include -Id:\Keil_v5\ARM\Inc\ST\STM32F4xx -D__MICROLIB -D__UVISION_VERSION=520 -DSTM32F40_41xxx -DUSE_STDPERIPH_DRIVER -D__CORTEX_M4F -D__FPU_PRESENT -D__CMSIS_RTOS -DSTM32F40_41xxx --omf_browse=.\discovery\def.crf ..\..\libraries\lwip-1.4.1\src\core\def.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  lwip_htons PROC
;;;63     u16_t
;;;64     lwip_htons(u16_t n)
000000  4601              MOV      r1,r0
;;;65     {
;;;66       return ((n & 0xff) << 8) | ((n & 0xff00) >> 8);
000002  0608              LSLS     r0,r1,#24
000004  0c00              LSRS     r0,r0,#16
000006  ea402011          ORR      r0,r0,r1,LSR #8
;;;67     }
00000a  4770              BX       lr
;;;68     
                          ENDP

                  lwip_ntohs PROC
;;;75     u16_t
;;;76     lwip_ntohs(u16_t n)
00000c  b500              PUSH     {lr}
;;;77     {
00000e  4602              MOV      r2,r0
;;;78       return lwip_htons(n);
000010  4610              MOV      r0,r2
000012  f7fffffe          BL       lwip_htons
;;;79     }
000016  bd00              POP      {pc}
;;;80     
                          ENDP

                  lwip_htonl PROC
;;;87     u32_t
;;;88     lwip_htonl(u32_t n)
000018  4601              MOV      r1,r0
;;;89     {
;;;90       return ((n & 0xff) << 24) |
00001a  0608              LSLS     r0,r1,#24
00001c  f401427f          AND      r2,r1,#0xff00
000020  ea402002          ORR      r0,r0,r2,LSL #8
000024  f401027f          AND      r2,r1,#0xff0000
000028  ea402012          ORR      r0,r0,r2,LSR #8
00002c  ea406011          ORR      r0,r0,r1,LSR #24
;;;91         ((n & 0xff00) << 8) |
;;;92         ((n & 0xff0000UL) >> 8) |
;;;93         ((n & 0xff000000UL) >> 24);
;;;94     }
000030  4770              BX       lr
;;;95     
                          ENDP

                  lwip_ntohl PROC
;;;102    u32_t
;;;103    lwip_ntohl(u32_t n)
000032  b500              PUSH     {lr}
;;;104    {
000034  4603              MOV      r3,r0
;;;105      return lwip_htonl(n);
000036  4618              MOV      r0,r3
000038  f7fffffe          BL       lwip_htonl
;;;106    }
00003c  bd00              POP      {pc}
;;;107    
                          ENDP

