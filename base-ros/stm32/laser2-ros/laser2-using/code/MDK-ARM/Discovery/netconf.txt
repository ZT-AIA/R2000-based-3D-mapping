; generated by Component: ARM Compiler 5.06 update 2 (build 183) Tool: ArmCC [4d35cd]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\discovery\netconf.o --asm_dir=.\Discovery\ --list_dir=.\Discovery\ --depend=.\discovery\netconf.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\inc -I..\src -I..\..\libraries\CMSIS\Include -I..\..\libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\libraries\STM32F4x7_ETH_Driver\inc -I..\..\libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\libraries\STM32F4-Discovery -I..\..\libraries\lwip-1.4.1\port\STM32F4x7 -I..\..\libraries\lwip-1.4.1\src\include -I..\..\libraries\lwip-1.4.1\src\include\ipv4 -I..\..\libraries\lwip-1.4.1\src\include\lwip -I..\..\libraries\lwip-1.4.1\src\include\netif -I..\..\libraries\lwip-1.4.1\port\STM32F4x7\arch -I..\..\libraries\rtx-v4.73\INC -I..\..\libraries\rtx-v4.73\SRC -I..\..\libraries\ptpd-2.0.0\src -I..\inc\system -I..\inc\laser -I..\inc\motorCtrl -I..\..\libraries\lwip-1.4.1\src\include\ipv4\lwip -Id:\Keil_v5\ARM\RV31\INC -Id:\Keil_v5\ARM\CMSIS\Include -Id:\Keil_v5\ARM\Inc\ST\STM32F4xx -D__MICROLIB -D__UVISION_VERSION=520 -DSTM32F40_41xxx -DUSE_STDPERIPH_DRIVER -D__CORTEX_M4F -D__FPU_PRESENT -D__CMSIS_RTOS -DSTM32F40_41xxx --omf_browse=.\discovery\netconf.crf ..\src\netconf.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  LwIP_Init PROC
;;;74       */
;;;75     void LwIP_Init(void)
000000  b500              PUSH     {lr}
;;;76     {
000002  b087              SUB      sp,sp,#0x1c
;;;77       struct ip_addr ipaddr;
;;;78       struct ip_addr netmask;
;;;79       struct ip_addr gw;
;;;80     #ifndef USE_DHCP 
;;;81       uint8_t iptab[4];
;;;82       uint8_t iptxt[20];
;;;83     #endif
;;;84       /* Create tcp_ip stack thread */
;;;85       tcpip_init( NULL, NULL );	
000004  2100              MOVS     r1,#0
000006  4608              MOV      r0,r1
000008  f7fffffe          BL       tcpip_init
;;;86     
;;;87       /* IP address setting & display on STM32_evalboard LCD*/
;;;88     #ifdef USE_DHCP
;;;89       ipaddr.addr = 0;
;;;90       netmask.addr = 0;
;;;91       gw.addr = 0;
;;;92     #else
;;;93       IP4_ADDR(&ipaddr, IP_ADDR0, IP_ADDR1, IP_ADDR2, IP_ADDR3);
00000c  4813              LDR      r0,|L1.92|
00000e  9006              STR      r0,[sp,#0x18]
;;;94       IP4_ADDR(&netmask, NETMASK_ADDR0, NETMASK_ADDR1 , NETMASK_ADDR2, NETMASK_ADDR3);
000010  f06f407f          MVN      r0,#0xff000000
000014  9005              STR      r0,[sp,#0x14]
;;;95       IP4_ADDR(&gw, GW_ADDR0, GW_ADDR1, GW_ADDR2, GW_ADDR3);
000016  4812              LDR      r0,|L1.96|
000018  9004              STR      r0,[sp,#0x10]
;;;96     #ifdef USE_LCD 
;;;97       iptab[0] = IP_ADDR3;
;;;98       iptab[1] = IP_ADDR2;
;;;99       iptab[2] = IP_ADDR1;
;;;100      iptab[3] = IP_ADDR0;
;;;101    
;;;102      sprintf((char*)iptxt, "  %d.%d.%d.%d", iptab[3], iptab[2], iptab[1], iptab[0]); 
;;;103    
;;;104      LCD_DisplayStringLine(Line8, (uint8_t*)"  Static IP address   ");
;;;105      LCD_DisplayStringLine(Line9, iptxt);
;;;106    #endif
;;;107    #endif
;;;108    
;;;109      /* - netif_add(struct netif *netif, struct ip_addr *ipaddr,
;;;110                struct ip_addr *netmask, struct ip_addr *gw,
;;;111                void *state, err_t (* init)(struct netif *netif),
;;;112                err_t (* input)(struct pbuf *p, struct netif *netif))
;;;113        
;;;114       Adds your network interface to the netif_list. Allocate a struct
;;;115      netif and pass a pointer to this structure as the first argument.
;;;116      Give pointers to cleared ip_addr structures when using DHCP,
;;;117      or fill them with sane numbers otherwise. The state pointer may be NULL.
;;;118    
;;;119      The init function pointer must point to a initialization function for
;;;120      your ethernet netif interface. The following code illustrates it's use.*/
;;;121      netif_add(&xnetif, &ipaddr, &netmask, &gw, NULL, &ethernetif_init, &tcpip_input);
00001a  4812              LDR      r0,|L1.100|
00001c  4912              LDR      r1,|L1.104|
00001e  2200              MOVS     r2,#0
000020  ab04              ADD      r3,sp,#0x10
000022  e9cd2100          STRD     r2,r1,[sp,#0]
000026  9002              STR      r0,[sp,#8]
000028  aa05              ADD      r2,sp,#0x14
00002a  a906              ADD      r1,sp,#0x18
00002c  480f              LDR      r0,|L1.108|
00002e  f7fffffe          BL       netif_add
;;;122    
;;;123     /*  Registers the default network interface. */
;;;124      netif_set_default(&xnetif);
000032  480e              LDR      r0,|L1.108|
000034  f7fffffe          BL       netif_set_default
;;;125    
;;;126     /*  When the netif is fully configured this function must be called.*/
;;;127     if(EthInitStatus==(ETH_INIT_FLAG|ETH_LINK_FLAG))
000038  480d              LDR      r0,|L1.112|
00003a  6800              LDR      r0,[r0,#0]  ; EthInitStatus
00003c  2811              CMP      r0,#0x11
00003e  d10a              BNE      |L1.86|
;;;128      {
;;;129    		xnetif.flags |=NETIF_FLAG_LINK_UP;
000040  480a              LDR      r0,|L1.108|
000042  f890002d          LDRB     r0,[r0,#0x2d]  ; xnetif
000046  f0400010          ORR      r0,r0,#0x10
00004a  4908              LDR      r1,|L1.108|
00004c  f881002d          STRB     r0,[r1,#0x2d]
;;;130    		netif_set_up(&xnetif);
000050  4608              MOV      r0,r1
000052  f7fffffe          BL       netif_set_up
                  |L1.86|
;;;131    	} 
;;;132    }
000056  b007              ADD      sp,sp,#0x1c
000058  bd00              POP      {pc}
;;;133    
                          ENDP

00005a  0000              DCW      0x0000
                  |L1.92|
                          DCD      0x0a01a8c0
                  |L1.96|
                          DCD      0x0101a8c0
                  |L1.100|
                          DCD      tcpip_input
                  |L1.104|
                          DCD      ethernetif_init
                  |L1.108|
                          DCD      xnetif
                  |L1.112|
                          DCD      EthInitStatus

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  xnetif
                          %        56

;*** Start embedded assembler ***

#line 1 "..\\src\\netconf.c"
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__asm___9_netconf_c_58668825____REV16|
#line 114 "..\\..\\libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___9_netconf_c_58668825____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__asm___9_netconf_c_58668825____REVSH|
#line 128
|__asm___9_netconf_c_58668825____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
