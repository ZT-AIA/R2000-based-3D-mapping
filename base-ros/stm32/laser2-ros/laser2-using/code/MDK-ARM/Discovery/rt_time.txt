; generated by Component: ARM Compiler 5.06 update 2 (build 183) Tool: ArmCC [4d35cd]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\discovery\rt_time.o --asm_dir=.\Discovery\ --list_dir=.\Discovery\ --depend=.\discovery\rt_time.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\inc -I..\src -I..\..\libraries\CMSIS\Include -I..\..\libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\libraries\STM32F4x7_ETH_Driver\inc -I..\..\libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\libraries\STM32F4-Discovery -I..\..\libraries\lwip-1.4.1\port\STM32F4x7 -I..\..\libraries\lwip-1.4.1\src\include -I..\..\libraries\lwip-1.4.1\src\include\ipv4 -I..\..\libraries\lwip-1.4.1\src\include\lwip -I..\..\libraries\lwip-1.4.1\src\include\netif -I..\..\libraries\lwip-1.4.1\port\STM32F4x7\arch -I..\..\libraries\rtx-v4.73\INC -I..\..\libraries\rtx-v4.73\SRC -I..\..\libraries\ptpd-2.0.0\src -I..\inc\system -I..\inc\laser -I..\inc\motorCtrl -I..\..\libraries\lwip-1.4.1\src\include\ipv4\lwip -Id:\Keil_v5\ARM\RV31\INC -Id:\Keil_v5\ARM\CMSIS\Include -Id:\Keil_v5\ARM\Inc\ST\STM32F4xx -D__MICROLIB -D__UVISION_VERSION=520 -DSTM32F40_41xxx -DUSE_STDPERIPH_DRIVER -D__CORTEX_M4F -D__FPU_PRESENT -D__CMSIS_RTOS -DSTM32F40_41xxx --omf_browse=.\discovery\rt_time.crf ..\..\libraries\rtx-v4.73\SRC\rt_Time.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  rt_time_get PROC
;;;54     
;;;55     U32 rt_time_get (void) {
000000  4816              LDR      r0,|L1.92|
;;;56       /* Get system time tick */
;;;57       return (os_time);
000002  6800              LDR      r0,[r0,#0]  ; os_time
;;;58     }
000004  4770              BX       lr
;;;59     
                          ENDP

                  rt_dly_wait PROC
;;;62     
;;;63     void rt_dly_wait (U16 delay_time) {
000006  b510              PUSH     {r4,lr}
000008  4604              MOV      r4,r0
;;;64       /* Delay task by "delay_time" */
;;;65       rt_block (delay_time, WAIT_DLY);
00000a  2103              MOVS     r1,#3
00000c  4620              MOV      r0,r4
00000e  f7fffffe          BL       rt_block
;;;66     }
000012  bd10              POP      {r4,pc}
;;;67     
                          ENDP

                  rt_itv_set PROC
;;;70     
;;;71     void rt_itv_set (U16 interval_time) {
000014  4912              LDR      r1,|L1.96|
;;;72       /* Set interval length and define start of first interval */
;;;73       os_tsk.run->interval_time = interval_time;
000016  6809              LDR      r1,[r1,#0]  ; os_tsk
000018  82c8              STRH     r0,[r1,#0x16]
;;;74       os_tsk.run->delta_time = interval_time + (U16)os_time;
00001a  4910              LDR      r1,|L1.92|
00001c  8809              LDRH     r1,[r1,#0]  ; os_time
00001e  4401              ADD      r1,r1,r0
000020  4a0f              LDR      r2,|L1.96|
000022  6812              LDR      r2,[r2,#0]  ; os_tsk
000024  8291              STRH     r1,[r2,#0x14]
;;;75     }
000026  4770              BX       lr
;;;76     
                          ENDP

                  rt_itv_wait PROC
;;;79     
;;;80     void rt_itv_wait (void) {
000028  b510              PUSH     {r4,lr}
;;;81       /* Wait for interval end and define start of next one */
;;;82       U16 delta;
;;;83     
;;;84       delta = os_tsk.run->delta_time - (U16)os_time;
00002a  480d              LDR      r0,|L1.96|
00002c  6800              LDR      r0,[r0,#0]  ; os_tsk
00002e  8a80              LDRH     r0,[r0,#0x14]
000030  490a              LDR      r1,|L1.92|
000032  8809              LDRH     r1,[r1,#0]  ; os_time
000034  1a40              SUBS     r0,r0,r1
000036  b284              UXTH     r4,r0
;;;85       os_tsk.run->delta_time += os_tsk.run->interval_time;
000038  4809              LDR      r0,|L1.96|
00003a  6800              LDR      r0,[r0,#0]  ; os_tsk
00003c  8a80              LDRH     r0,[r0,#0x14]
00003e  4908              LDR      r1,|L1.96|
000040  6809              LDR      r1,[r1,#0]  ; os_tsk
000042  8ac9              LDRH     r1,[r1,#0x16]
000044  4408              ADD      r0,r0,r1
000046  4906              LDR      r1,|L1.96|
000048  6809              LDR      r1,[r1,#0]  ; os_tsk
00004a  8288              STRH     r0,[r1,#0x14]
;;;86       if ((delta & 0x8000) == 0) {
00004c  f4044000          AND      r0,r4,#0x8000
000050  b918              CBNZ     r0,|L1.90|
;;;87         rt_block (delta, WAIT_ITV);
000052  2104              MOVS     r1,#4
000054  4620              MOV      r0,r4
000056  f7fffffe          BL       rt_block
                  |L1.90|
;;;88       }
;;;89     }
00005a  bd10              POP      {r4,pc}
;;;90     
                          ENDP

                  |L1.92|
                          DCD      os_time
                  |L1.96|
                          DCD      os_tsk

                          AREA ||.data||, DATA, ALIGN=2

                  os_time
                          DCD      0x00000000
