; generated by Component: ARM Compiler 5.06 update 2 (build 183) Tool: ArmCC [4d35cd]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\discovery\stm32f4xx_syscfg.o --asm_dir=.\Discovery\ --list_dir=.\Discovery\ --depend=.\discovery\stm32f4xx_syscfg.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\inc -I..\src -I..\..\libraries\CMSIS\Include -I..\..\libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\libraries\STM32F4x7_ETH_Driver\inc -I..\..\libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\libraries\STM32F4-Discovery -I..\..\libraries\lwip-1.4.1\port\STM32F4x7 -I..\..\libraries\lwip-1.4.1\src\include -I..\..\libraries\lwip-1.4.1\src\include\ipv4 -I..\..\libraries\lwip-1.4.1\src\include\lwip -I..\..\libraries\lwip-1.4.1\src\include\netif -I..\..\libraries\lwip-1.4.1\port\STM32F4x7\arch -I..\..\libraries\rtx-v4.73\INC -I..\..\libraries\rtx-v4.73\SRC -I..\..\libraries\ptpd-2.0.0\src -I..\inc\system -I..\inc\laser -I..\inc\motorCtrl -I..\..\libraries\lwip-1.4.1\src\include\ipv4\lwip -Id:\Keil_v5\ARM\RV31\INC -Id:\Keil_v5\ARM\CMSIS\Include -Id:\Keil_v5\ARM\Inc\ST\STM32F4xx -D__MICROLIB -D__UVISION_VERSION=520 -DSTM32F40_41xxx -DUSE_STDPERIPH_DRIVER -D__CORTEX_M4F -D__FPU_PRESENT -D__CMSIS_RTOS -DSTM32F40_41xxx --omf_browse=.\discovery\stm32f4xx_syscfg.crf ..\..\libraries\STM32F4xx_StdPeriph_Driver\src\stm32f4xx_syscfg.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  SYSCFG_DeInit PROC
;;;91       */
;;;92     void SYSCFG_DeInit(void)
000000  b510              PUSH     {r4,lr}
;;;93     {
;;;94        RCC_APB2PeriphResetCmd(RCC_APB2Periph_SYSCFG, ENABLE);
000002  2101              MOVS     r1,#1
000004  0388              LSLS     r0,r1,#14
000006  f7fffffe          BL       RCC_APB2PeriphResetCmd
;;;95        RCC_APB2PeriphResetCmd(RCC_APB2Periph_SYSCFG, DISABLE);
00000a  2100              MOVS     r1,#0
00000c  f44f4080          MOV      r0,#0x4000
000010  f7fffffe          BL       RCC_APB2PeriphResetCmd
;;;96     }
000014  bd10              POP      {r4,pc}
;;;97     
                          ENDP

                  SYSCFG_MemoryRemapConfig PROC
;;;107      */
;;;108    void SYSCFG_MemoryRemapConfig(uint8_t SYSCFG_MemoryRemap)
000016  491a              LDR      r1,|L1.128|
;;;109    {
;;;110      /* Check the parameters */
;;;111      assert_param(IS_SYSCFG_MEMORY_REMAP_CONFING(SYSCFG_MemoryRemap));
;;;112    
;;;113      SYSCFG->MEMRMP = SYSCFG_MemoryRemap;
000018  6008              STR      r0,[r1,#0]
;;;114    }
00001a  4770              BX       lr
;;;115    
                          ENDP

                  SYSCFG_EXTILineConfig PROC
;;;124      */
;;;125    void SYSCFG_EXTILineConfig(uint8_t EXTI_PortSourceGPIOx, uint8_t EXTI_PinSourcex)
00001c  b530              PUSH     {r4,r5,lr}
;;;126    {
;;;127      uint32_t tmp = 0x00;
00001e  2200              MOVS     r2,#0
;;;128    
;;;129      /* Check the parameters */
;;;130      assert_param(IS_EXTI_PORT_SOURCE(EXTI_PortSourceGPIOx));
;;;131      assert_param(IS_EXTI_PIN_SOURCE(EXTI_PinSourcex));
;;;132    
;;;133      tmp = ((uint32_t)0x0F) << (0x04 * (EXTI_PinSourcex & (uint8_t)0x03));
000020  078b              LSLS     r3,r1,#30
000022  0f1c              LSRS     r4,r3,#28
000024  230f              MOVS     r3,#0xf
000026  fa03f204          LSL      r2,r3,r4
;;;134      SYSCFG->EXTICR[EXTI_PinSourcex >> 0x02] &= ~tmp;
00002a  4b15              LDR      r3,|L1.128|
00002c  3308              ADDS     r3,r3,#8
00002e  108c              ASRS     r4,r1,#2
000030  f8533024          LDR      r3,[r3,r4,LSL #2]
000034  4393              BICS     r3,r3,r2
000036  4c12              LDR      r4,|L1.128|
000038  3408              ADDS     r4,r4,#8
00003a  108d              ASRS     r5,r1,#2
00003c  f8443025          STR      r3,[r4,r5,LSL #2]
;;;135      SYSCFG->EXTICR[EXTI_PinSourcex >> 0x02] |= (((uint32_t)EXTI_PortSourceGPIOx) << (0x04 * (EXTI_PinSourcex & (uint8_t)0x03)));
000040  4623              MOV      r3,r4
000042  108c              ASRS     r4,r1,#2
000044  f8533024          LDR      r3,[r3,r4,LSL #2]
000048  078c              LSLS     r4,r1,#30
00004a  0f24              LSRS     r4,r4,#28
00004c  fa00f404          LSL      r4,r0,r4
000050  4323              ORRS     r3,r3,r4
000052  4c0b              LDR      r4,|L1.128|
000054  3408              ADDS     r4,r4,#8
000056  108d              ASRS     r5,r1,#2
000058  f8443025          STR      r3,[r4,r5,LSL #2]
;;;136    }
00005c  bd30              POP      {r4,r5,pc}
;;;137    
                          ENDP

                  SYSCFG_ETH_MediaInterfaceConfig PROC
;;;145      */
;;;146    void SYSCFG_ETH_MediaInterfaceConfig(uint32_t SYSCFG_ETH_MediaInterface) 
00005e  4909              LDR      r1,|L1.132|
;;;147    { 
;;;148      assert_param(IS_SYSCFG_ETH_MEDIA_INTERFACE(SYSCFG_ETH_MediaInterface)); 
;;;149      /* Configure MII_RMII selection bit */ 
;;;150      *(__IO uint32_t *) PMC_MII_RMII_SEL_BB = SYSCFG_ETH_MediaInterface; 
000060  6008              STR      r0,[r1,#0]
;;;151    }
000062  4770              BX       lr
;;;152    
                          ENDP

                  SYSCFG_CompensationCellCmd PROC
;;;162      */
;;;163    void SYSCFG_CompensationCellCmd(FunctionalState NewState)
000064  4908              LDR      r1,|L1.136|
;;;164    {
;;;165      /* Check the parameters */
;;;166      assert_param(IS_FUNCTIONAL_STATE(NewState));
;;;167    
;;;168      *(__IO uint32_t *) CMPCR_CMP_PD_BB = (uint32_t)NewState;
000066  6008              STR      r0,[r1,#0]
;;;169    }
000068  4770              BX       lr
;;;170    
                          ENDP

                  SYSCFG_GetCompensationCellStatus PROC
;;;175      */
;;;176    FlagStatus SYSCFG_GetCompensationCellStatus(void)
00006a  2000              MOVS     r0,#0
;;;177    {
;;;178      FlagStatus bitstatus = RESET;
;;;179        
;;;180      if ((SYSCFG->CMPCR & SYSCFG_CMPCR_READY ) != (uint32_t)RESET)
00006c  4904              LDR      r1,|L1.128|
00006e  3120              ADDS     r1,r1,#0x20
000070  6809              LDR      r1,[r1,#0]
000072  f4017180          AND      r1,r1,#0x100
000076  b109              CBZ      r1,|L1.124|
;;;181      {
;;;182        bitstatus = SET;
000078  2001              MOVS     r0,#1
00007a  e000              B        |L1.126|
                  |L1.124|
;;;183      }
;;;184      else
;;;185      {
;;;186        bitstatus = RESET;
00007c  2000              MOVS     r0,#0
                  |L1.126|
;;;187      }
;;;188      return bitstatus;
;;;189    }
00007e  4770              BX       lr
;;;190    
                          ENDP

                  |L1.128|
                          DCD      0x40013800
                  |L1.132|
                          DCD      0x422700dc
                  |L1.136|
                          DCD      0x42270400

;*** Start embedded assembler ***

#line 1 "..\\..\\libraries\\STM32F4xx_StdPeriph_Driver\\src\\stm32f4xx_syscfg.c"
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__asm___18_stm32f4xx_syscfg_c_57637610____REV16|
#line 114 "..\\..\\libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___18_stm32f4xx_syscfg_c_57637610____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__asm___18_stm32f4xx_syscfg_c_57637610____REVSH|
#line 128
|__asm___18_stm32f4xx_syscfg_c_57637610____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
